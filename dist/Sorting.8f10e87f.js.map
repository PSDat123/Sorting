{"version":3,"sources":["JS/Methods.js","JS/Sorting.js"],"names":["Method","constructor","num","data","canvas","c","getContext","alpha","c_height","height","c_width","width","col_w","status","speed","description","Object","keys","prototype","map","s","split","s1","toUpperCase","substr","join","sort","mode","set_fill","style","fillStyle","showData","h","cw","clearRect","i","length","fillRect","redLine","color","data_pair","sleep","Promise","requestAnimationFrame","callBack","shuffle","stime","count","j","setRandomData","cur_l","pop","temp","a","push","Math","random","anim_data","_temp","_stime","start","end","end_sort","toLowerCase","max","main","gap","con","pgap","t","merge_sort","l","r","m","merge","L","slice","R","il","temp_arr","dl","dr","undefined","temp_index","min","inc","quickSort","pivot_index","partition_h","con_i","con_j","ran","pivot_value","num_len","log10","count_sort","range","n","unshift","bucket","bucket_len","_n","main_canvas","document","querySelector","nav_bar","current_opt","num_ip","start_btn","ran_btn","stop_btn","method","parseInt","value","default_num","ran_con","tag","createElement","text","createTextNode","appendChild","classList","add","wrap","cur_select","setAttribute","innerHTML","caret","select_list","select_items","toggle","addEventListener","firstChild","toggleList","setup","window","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","start_sort","console","clear","Date","getTime","log","getAttribute","stop_sort","event","contains","target","alert","disabled"],"mappings":"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","file":"Sorting.8f10e87f.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\r\n\r\nexport default class Method {\r\n  constructor(num, data, canvas) {\r\n    this.c = canvas.getContext(\"2d\", { alpha: false });\r\n    this.data = data;\r\n    this.c_height = canvas.height;\r\n    this.c_width = canvas.width;\r\n    this.num = num;\r\n    this.col_w = this.c_width / this.num;\r\n    this.status = 0;\r\n    this.speed = 1;\r\n    this.description = Object.keys(Method.prototype)\r\n      .map((s) =>\r\n        s\r\n          .split(\" \")\r\n          .map((s1) => s1[0].toUpperCase() + s1.substr(1))\r\n          .join(\" \")\r\n      )\r\n      .sort();\r\n    this.mode = \"column\";\r\n  }\r\n  set_fill(style = \"#f0f0f0\") {\r\n    this.c.fillStyle = style;\r\n  }\r\n  showData() {\r\n    let h = this.c_height,\r\n      cw = ~~this.col_w + 1;\r\n    this.c.clearRect(0, 0, this.c_width, this.c_height);\r\n    for (let i = this.data.length; i--;) {\r\n      this.c.fillRect(\r\n        this.data[i][0] - 1,\r\n        h - this.data[i][1],\r\n        cw,\r\n        this.data[i][1]\r\n      );\r\n    }\r\n  }\r\n  redLine(color = \"#ff0505\", ...data_pair) {\r\n    this.set_fill(color);\r\n    let h = this.c_height,\r\n      cw = ~~this.col_w + 1;\r\n    for (let i = data_pair.length; i--;)\r\n      this.c.fillRect(\r\n        data_pair[i][0] - 1,\r\n        h - data_pair[i][1],\r\n        cw,\r\n        data_pair[i][1]\r\n      );\r\n    this.set_fill();\r\n  }\r\n  async sleep() {\r\n    return new Promise(requestAnimationFrame);\r\n  }\r\n\r\n  callBack() {}\r\n\r\n  //#region Animated Shuffle\r\n  async shuffle() {\r\n    this.set_fill();\r\n    let stime = 10,\r\n      count = 0;\r\n    for (let i = 0; i < stime * stime; i++) {\r\n      await this.sleep();\r\n      count = 0;\r\n      for (let j = 0; j < this.data.length; j++) {\r\n        if (this.data[j][1] <= 1) {\r\n          count++;\r\n          this.data[j][1] = 0;\r\n        } else this.data[j][1] -= this.data[j][1] / stime;\r\n      }\r\n      this.showData();\r\n      if (count === this.data.length) break;\r\n    }\r\n    this.data = [];\r\n    await this.setRandomData();\r\n  }\r\n  async setRandomData() {\r\n    this.set_fill();\r\n    this.col_w = this.c_width / this.num;\r\n    let cur_l = this.data.length,\r\n      min_h = 5,\r\n      num = this.num;\r\n    if (num < cur_l) {\r\n      for (let i =  cur_l - this.num ; i--;) {\r\n        this.data.pop();\r\n      }\r\n      return;\r\n    }\r\n    let temp = [];\r\n    // for (let i = 0; i < this.num - cur_l * (this.num >= cur_l); i++) {\r\n    for (let i = 0, a = num - cur_l; i < a; i++) {\r\n      temp.push([\r\n        cur_l + i,\r\n        ~~(Math.random() * (this.c_height - 5)) + min_h,\r\n        //cos//~~(this.c_height - (Math.cos(this.data.length / 10) + 1) * (this.c_height/2 - min_h/2))\r\n        //sin//~~(this.c_height - (Math.sin(this.data.length / 10) + 1) * (this.c_height/2 - min_h/2))\r\n      ]);\r\n      this.data.push([~~(i * this.col_w), 0]);\r\n    }\r\n    await this.anim_data(temp, 12, cur_l, num);\r\n  }\r\n  async anim_data(_temp, _stime, start, end) {\r\n    let stime = _stime,\r\n      count = 0,\r\n      temp = _temp;\r\n    for (let i = 0; i < stime * stime; i++) {\r\n      await this.sleep();\r\n      count = 0;\r\n      this.showData();\r\n      for (let j = 0; j < end - start; j++) {\r\n        if (this.data[start + j][1] >= temp[j][1]) {\r\n          count++;\r\n          this.data[start + j][1] = temp[j][1];\r\n        } else\r\n          this.data[start + j][1] =\r\n            this.data[start + j][1] + temp[j][1] / stime;\r\n      }\r\n      if (count === end - start) break;\r\n    }\r\n    this.showData();\r\n  }\r\n  //#endregion\r\n  end_sort() {\r\n    this.c.fillStyle = \"#00ff00\";\r\n    this.showData();\r\n    this.status = 0;\r\n    this.callBack();\r\n  }\r\n}\r\n\r\n//#region Bubble Sort\r\nMethod.prototype[\"Bubble sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let count = 0,\r\n    i = 0,\r\n    max = this.num,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for (;;) {\r\n      await this.sleep();\r\n      if (!this.status) return 0;\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n      if (i + 1 < max && this.data[i][1] > this.data[i + 1][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i + 1][1];\r\n        this.data[i + 1][1] = temp;\r\n        // [this.data[i][1], this.data[i+1][1]] = [this.data[i+1][1], this.data[i][1]];\r\n        count = 0;\r\n      } else {\r\n        count++;\r\n      }\r\n\r\n      if (count === max) {\r\n        return 1;\r\n      }\r\n      i++;\r\n\r\n      if (i === max) {\r\n        max -= count;\r\n        count = 0;\r\n        i = 0;\r\n      }\r\n      \r\n    }\r\n  };\r\n  let t = await main();\r\n  if (!t) {\r\n    this.showData();\r\n    return;\r\n  }\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Comb Sort\r\nMethod.prototype[\"Comb sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let max = this.data.length - 1,\r\n    gap = ~~((this.data.length * 10) / 13),\r\n    i = 0,\r\n    temp = 0,\r\n    count = 0,\r\n    con = 0,\r\n    pgap = gap;\r\n\r\n  let main = async () => {\r\n    for (;;) {\r\n      await this.sleep();\r\n      if (!this.status) return 0;\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n      if (i + gap <= max && this.data[i][1] > this.data[i + gap][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i + gap][1];\r\n        this.data[i + gap][1] = temp;\r\n        // [this.data[i][1], this.data[i+1][1]] = [this.data[i+1][1], this.data[i][1]];\r\n\r\n        if (con) gap = pgap;\r\n        con = 0;\r\n        count = 0;\r\n      } else {\r\n        count++;\r\n      }\r\n      if (i + gap <= max) this.redLine(\"#ff0505\", this.data[i + gap]);\r\n      i++;\r\n      if (i + gap > max) {\r\n        i = 0;\r\n        pgap = gap;\r\n        gap = ~~((gap * 10) / 13);\r\n        if (gap < 1 && count >= max) {\r\n          return 1;\r\n        } else if (gap < 1 || count >= max - pgap) {\r\n          con = 1;\r\n          gap = 1;\r\n        }\r\n        count = 0;\r\n      }\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if (!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Insertion Sort\r\nMethod.prototype[\"Insertion sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let max = 1,\r\n    i = max + 1,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for (;;) {\r\n      await this.sleep();\r\n      if (!this.status) return 0;\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i - 1]);\r\n      i--;\r\n      if (i - 1 >= 0 && this.data[i][1] < this.data[i - 1][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i - 1][1];\r\n        this.data[i - 1][1] = temp;\r\n        // [this.data[i][1], this.data[i-1][1]] = [this.data[i-1][1], this.data[i][1]];\r\n      } else {\r\n        max++;\r\n        i = max + 1;\r\n        // count = 0;\r\n      }\r\n      if (max >= this.num) {\r\n        return 1;\r\n      }\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if (!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Merge Sort\r\nMethod.prototype[\"Merge sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let merge_sort = async (l, r) => {\r\n    if (l < r) {\r\n      var m = ~~(l + (r - l) / 2);\r\n      await merge_sort(l, m);\r\n      await merge_sort(m + 1, r);\r\n\r\n      await merge(l, m, r);\r\n    }\r\n    if (!this.status) return -1;\r\n  };\r\n\r\n  let merge = async (l, m, r) => {\r\n    let L = this.data.slice(l, m + 1);\r\n    let R = this.data.slice(m + 1, r + 1);\r\n    let il = L.length + R.length;\r\n    let temp_arr = [];\r\n    for (let dl = 0, dr = 0; dl + dr < il; dl++, dr++) {\r\n      await this.sleep();\r\n      if (!this.status) return -1;\r\n      this.showData();\r\n      if (R[dr]?.[1] === undefined || L[dl]?.[1] < R[dr]?.[1]) {\r\n        temp_arr.push(L[dl][1]);\r\n        this.redLine(\"#ff0505\", this.data[dl + l], this.data[m + dr]);\r\n        dr--;\r\n      } else {\r\n        temp_arr.push(R[dr][1]);\r\n        // this.data[dl + dr + l] = [this.data[dl + dr + l][0], R[dr][1]];\r\n        this.redLine(\"#ff0505\", this.data[dl + l], this.data[m + dr]);\r\n        dl--;\r\n      }\r\n    }\r\n    for (let i = 0; i < temp_arr.length; i++) {\r\n      if (!this.status) return -1;\r\n\r\n      this.data[l + i][1] = temp_arr[i];\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[l + i]);\r\n      await this.sleep();\r\n    }\r\n  };\r\n  let t = (await merge_sort(0, this.data.length - 1)) || 1;\r\n  this.showData();\r\n  if (t === -1) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Shell Sort\r\nMethod.prototype[\"Shell sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n  let max = this.data.length,\r\n    gap = ~~(this.data.length / 2),\r\n    i = gap,\r\n    temp_index = gap,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for (;;) {\r\n      await this.sleep();\r\n      if (!this.status) return 0;\r\n      if (\r\n        temp_index - gap >= 0 &&\r\n        this.data[temp_index][1] < this.data[temp_index - gap][1]\r\n      ) {\r\n        temp = this.data[temp_index][1];\r\n        this.data[temp_index][1] = this.data[temp_index - gap][1];\r\n        this.data[temp_index - gap][1] = temp;\r\n        // [this.data[temp_index][1], this.data[temp_index - gap][1]] = [this.data[temp_index - gap][1], this.data[temp_index][1]];\r\n        temp_index -= gap;\r\n        // changes++;\r\n        // if (con) gap = pgap;\r\n        // con = 0;\r\n      } else {\r\n        i++;\r\n        temp_index = i;\r\n      }\r\n      this.showData();\r\n      this.redLine(\r\n        \"#ff0505\",\r\n        this.data[temp_index - gap * (temp_index >= gap)]\r\n      );\r\n      if (i >= max) {\r\n        gap = ~~(gap / 2);\r\n        i = gap;\r\n        temp_index = gap;\r\n        // pgap = gap;\r\n        // if (con) {gap = 0; i = gap;}\r\n        // else {\r\n        // \tif(changes){\r\n        // \t\tgap = ~~(gap / 2);\r\n        // \t\ti = gap;\r\n        // \t\ttemp_index = gap;\r\n        // \t}\r\n        // \telse{\r\n        // \t\tgap = 1;\r\n        // \t\tcon = 1;\r\n        // \t\ti = gap;\r\n        // \t\ttemp_index = gap;\r\n        // \t}\r\n        // }\r\n        if (gap < 1) {\r\n          return 1;\r\n        }\r\n      }\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if (!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Cocktail Shaker Sort\r\nMethod.prototype[\"Cocktail sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let i = 0,\r\n    min = 0,\r\n    max = this.data.length - 1,\r\n    inc = 1,\r\n    temp = 0,\r\n    count = 0;\r\n  let main = async () => {\r\n    for (;;) {\r\n      await this.sleep();\r\n      if (!this.status) return 0;\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n\r\n      if (min <= i + inc && i + inc <= max) {\r\n        if (\r\n          (inc > 0 && this.data[i][1] > this.data[i + inc][1]) ||\r\n          (inc < 0 && this.data[i][1] < this.data[i - 1][1])\r\n        ) {\r\n          temp = this.data[i][1];\r\n          this.data[i][1] = this.data[i + inc][1];\r\n          this.data[i + inc][1] = temp;\r\n          count = 0;\r\n        } else {\r\n          count++;\r\n        }\r\n        i += inc;\r\n      } else {\r\n        inc = -inc;\r\n        if (i >= max) {\r\n          max -= count;\r\n          i = max;\r\n        } else {\r\n          min += count;\r\n          i = min;\r\n        }\r\n      }\r\n      if (min > max) {\r\n        return 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  let t = await main();\r\n  this.showData();\r\n  if (!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Quick Sort\r\nMethod.prototype[\"Quick Sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let temp = 0;\r\n\r\n  let quickSort = async (l, r) => {\r\n    if (l < r) {\r\n      let pivot_index = await partition_h(l, r);\r\n      if (pivot_index === -1) return pivot_index;\r\n      await quickSort(l, pivot_index);\r\n      await quickSort(pivot_index + 1, r);\r\n    }\r\n    if (!this.status) return -1;\r\n  };\r\n  //Lomuto Partition\r\n  // let partition_l = async (l, r) => {\r\n  // \tlet pivot_value = this.data[r][1];\r\n  // \tlet temp = 0;\r\n  // \tlet i = l, j = 0;\r\n\r\n  // \tfor(j = l; j < r; j++){\r\n  // \t\tawait this.sleep();\r\n  // \t\tthis.showData();\r\n  // \t\tthis.redLine(\"#ff0505\", this.data[i]);\r\n  // \t\tthis.redLine(\"#ff0505\", this.data[j]);\r\n  // \t\tif(this.data[j][1] <= pivot_value){\r\n  // \t\t\ttemp = this.data[i][1]; //swap\r\n  // \t\t\tthis.data[i][1] = this.data[j][1];\r\n  // \t\t\tthis.data[j][1] = temp;\r\n  // \t\t\ti++;\r\n  // \t\t}\r\n  // \t}\r\n  // \ttemp = this.data[i][1]; //swap\r\n  // \tthis.data[i][1] = this.data[r][1];\r\n  // \tthis.data[r][1] = temp;\r\n  // \treturn i;\r\n  // }\r\n\r\n  //Hoare partition\r\n  let partition_h = async (l, r) => {\r\n    let con_i = 0,\r\n      con_j = 0;\r\n    //#region --Random pivot--\r\n    var ran = ~~((r + l) / 2);\r\n    // temp = this.data[ran][1]; //swap\r\n    // this.data[ran][1] = this.data[l][1];\r\n    // this.data[l][1] = temp;\r\n\r\n    //#endregion\r\n    let pivot_value = this.data[ran][1];\r\n    let i = l - 1,\r\n      j = r + 1;\r\n\r\n    for (;;) {\r\n      await this.sleep();\r\n      if (!this.status) return -1;\r\n      if (!con_i) {\r\n        i++;\r\n        if (this.data[i][1] >= pivot_value) {\r\n          con_i = 1;\r\n        }\r\n      }\r\n      if (con_i) {\r\n        j--;\r\n        if (this.data[j][1] <= pivot_value) {\r\n          con_j = 1;\r\n        }\r\n      }\r\n      this.showData();\r\n      this.redLine(\"#68f571\", this.data[ran]);\r\n      this.redLine(\"#ff0505\", this.data[i], this.data[j - 1 * !con_i]);\r\n      if (con_i && con_j) {\r\n        if (i >= j) return j;\r\n        else {\r\n          con_i = 0;\r\n          con_j = 0;\r\n          if (i === ran) ran = j;\r\n          else if (j === ran) ran = i;\r\n          temp = this.data[i][1]; //swap\r\n          this.data[i][1] = this.data[j][1];\r\n          this.data[j][1] = temp;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  let t = (await quickSort(0, this.data.length - 1)) || 1;\r\n  this.showData();\r\n  if (t === -1) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Radix Sort\r\nMethod.prototype[\"Radix Sort\".toLowerCase()] = async function () {\r\n   this.set_fill();\r\n   this.status = 1;\r\n\r\n  let num_len = ~~Math.log10(this.c_height) + 1;\r\n\r\n  let count_sort = async (n) => {\r\n    let range = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      temp_arr = [];\r\n    for (let i = 0; i < this.data.length; i++) {\r\n      range[~~((this.data[i][1] % 10 ** n) / 10 ** (n - 1))]++;\r\n      await this.sleep();\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n      // await here\r\n    }\r\n    for (let i = 1; i < range.length; i++) {\r\n      range[i] += range[i - 1];\r\n      // await this.sleep();\r\n    }\r\n    range.unshift(0);\r\n    range.pop();\r\n\r\n    let bucket = [],\r\n      bucket_len = [];\r\n    for (let i = 0, l = range.length ; i !== l ; i++) {\r\n      bucket.push(range[i]);\r\n      if(range[i] < this.num)this.redLine(\"#ff0505\", this.data[range[i]]);\r\n      if(i !== 0){\r\n        if(i === l - 1){\r\n          bucket_len[i] = this.num - bucket[i];\r\n        }\r\n        bucket_len[i - 1] = bucket[i] - bucket[i - 1];\r\n      }\r\n    }\r\n\r\n    for (let i = 0, l = this.data.length; i !== l; i++){\r\n      let t = ~~((this.data[i][1] % 10 ** n) / 10 ** (n - 1));\r\n      temp_arr[range[t]] = this.data[i][1];\r\n      \r\n      range[t]++;\r\n    }\r\n    for(;;){\r\n      await this.sleep();\r\n      let _n = 0;\r\n      this.showData();\r\n      for (let i = 0, l = bucket.length; i !== l; i++) {\r\n        if(bucket_len[i]){\r\n          this.data[bucket[i]][1] = temp_arr[bucket[i]];\r\n          this.redLine(\"#ff0505\", this.data[bucket[i]]);\r\n          bucket[i]++; \r\n          bucket_len[i]--;\r\n          _n++;\r\n        }\r\n      }\r\n      \r\n      if(!_n) break;\r\n    }\r\n  };\r\n\r\n  let main = async () => {\r\n    for (let n = 1; n <= num_len; n++) {\r\n      await count_sort(n);\r\n    }\r\n    return 1;\r\n  }\r\n  let t = await main();\r\n  this.showData();\r\n  if (!t) return;\r\n  this.end_sort();\r\n};\r\n\r\n//#endregion\r\n\r\n//#region ______OLD_____\r\n\r\n//Merge sort algorithm\r\n// let queue = [];\r\n// (function merge_index(l,r){\r\n// \tif(l<r){\r\n// \t\tvar m = ~~(l + (r - l) / 2);\r\n// \t\tmerge_index(l,m);\r\n// \t\tmerge_index(m+1, r);\r\n// \t\tqueue.push([l,m,r]);\r\n// \t}\r\n// })(0, this.data.length - 1);\r\n// // console.log(queue);\r\n// let q_i = 0\r\n// let l = queue[q_i][0];\r\n// let m = queue[q_i][1];\r\n// let r = queue[q_i][2];\r\n// let a1 = this.data.slice(l, m + 1);\r\n// let a2 = this.data.slice(m + 1, r + 1);\r\n// let l1 = 0, l2 = 0, con = 0;\r\n// let main = () =>{\r\n// \tthis.req = requestAnimationFrame(main);\r\n// \tif (l + l1 > m && m + 1 + l2 > r) {\r\n// \t\tq_i++;\r\n// \t\tif (q_i >= queue.length) {\r\n// \t\t\tthis.end_sort();\r\n// \t\t\t//End Timer\r\n// \t\t\tconst end = new Date().getTime();\r\n// \t\t\tconsole.log(`End: ${end}`);\r\n// \t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\tl = queue[q_i][0];\r\n// \t\t\tm = queue[q_i][1];\r\n// \t\t\tr = queue[q_i][2];\r\n// \t\t\ta1 = this.data.slice(l, m + 1);\r\n// \t\t\ta2 = this.data.slice(m + 1, r + 1);\r\n// \t\t\tl1 = 0;\r\n// \t\t\tl2 = 0;\r\n// \t\t}\r\n// \t}\r\n// \telse if ((con = l + l1 > m) || m + 1 + l2 > r){\r\n// \t\tthis.data[l + l1 + l2] = [this.data[l + l1 + l2][0], con ? a2[l2][1] : a1[l1][1]];\r\n// \t\tthis.showData();\r\n// \t\tc.fillStyle = \"#00ffff\";//cyan\r\n// \t\tc.fillRect(this.data[m + 1][0], this.c_height - this.data[m + 1][1], this.col_w, this.data[m + 1][1]);\r\n// \t\tthis.set_fill();\r\n// \t\t//Red line\r\n// \t\tthis.redLine(this.data[l + l1 + l2]);\r\n// \t\tcon? l2++ : l1++;\r\n// \t}\r\n// \telse{\r\n// \t\tcon = a1[l1][1] > a2[l2][1];\r\n// \t\tthis.data[l + l1 + l2] = [this.data[l + l1 + l2][0], con ? a2[l2][1] : a1[l1][1]];\r\n// \t\tthis.showData();\r\n// \t\tc.fillStyle = \"#00ffff\";//cyan\r\n// \t\tc.fillRect(this.data[m + 1][0], this.c_height - this.data[m + 1][1], this.col_w, this.data[m + 1][1]);\r\n// \t\tthis.set_fill();\r\n// \t\t//Red line\r\n// \t\tthis.redLine(this.data[l + l1 + l2]);\r\n// \t\tcon ? l2++ : l1++;\r\n// \t\t}\r\n// }\r\n// main();\r\n//#endregion\r\n","import Method from \"./Methods.js\";\r\n\r\nlet main_canvas = document.querySelector(\".main-canvas\");\r\nlet nav_bar = document.querySelector(\".nav-bar\");\r\n\r\nlet current_opt = document.querySelector(\".selection\");\r\nlet num_ip = document.querySelector(\".ip\");\r\n\r\nlet start_btn = document.querySelector(\".start\");\r\nlet ran_btn = document.querySelector(\".randomizer\");\r\nlet stop_btn = document.querySelector(\".stop\");\r\n\r\n// let num = parseInt(num_ip.value);\r\nlet data = [];\r\n\r\nlet method = new Method(parseInt(num_ip.value), data, main_canvas);\r\nlet default_num = parseInt(num_ip.value);\r\nlet ran_con = 0;\r\n//#region Custom Selection\r\nfor (let i of method.description) {\r\n  let tag = document.createElement(\"OPTION\");\r\n  let text = document.createTextNode(i);\r\n  tag.appendChild(text);\r\n  tag.classList.add(\"opts\");\r\n  // tag.value = i.match(/^(?:\\w){2}/g).join(\"\").trim() + \"sort\";\r\n  tag.value = i.toLowerCase();\r\n  current_opt.appendChild(tag);\r\n}\r\n\r\n// const eve = new Event(\"method_changed\")\r\n\r\nlet wrap = document.querySelector(\".option-wrap\");\r\nlet l = current_opt.length;\r\n\r\nlet cur_select = document.createElement(\"DIV\");\r\ncur_select.setAttribute(\"class\", \"current-select\");\r\ncur_select.setAttribute(\"value\", current_opt[0].innerHTML.toLowerCase());\r\ncur_select.innerHTML = current_opt[0].innerHTML;\r\n\r\nlet caret = document.createElement(\"I\");\r\ncaret.setAttribute(\"class\", \"fas fa-caret-down arrow-down\");\r\ncur_select.appendChild(caret);\r\n\r\nwrap.appendChild(cur_select);\r\n\r\nlet select_list = document.createElement(\"DIV\"),\r\n  select_items = [];\r\nselect_list.setAttribute(\"class\", \"select-items\");\r\nselect_list.classList.toggle(\"hide-items\");\r\nfor (let i = 0; i < l; i++) {\r\n  // console.log(current_opt[i]);\r\n  select_items.push(document.createElement(\"DIV\"));\r\n  select_items[i].setAttribute(\"class\", \"choices\");\r\n  select_items[i].innerHTML = current_opt[i].innerHTML;\r\n  select_items[i].addEventListener(\"click\", () => {\r\n    cur_select.firstChild.data = select_items[i].innerHTML;\r\n    cur_select.setAttribute(\"value\", select_items[i].innerHTML.toLowerCase());\r\n    // cur_select.dispatchEvent(eve);\r\n    method.status = 0;\r\n    method.callBack();\r\n  });\r\n  select_list.appendChild(select_items[i]);\r\n}\r\n\r\nwrap.appendChild(select_list);\r\n\r\nwrap.addEventListener(\"click\", toggleList);\r\n\r\nfunction toggleList() {\r\n  cur_select.classList.toggle(\"active\");\r\n  select_list.classList.toggle(\"hide-items\");\r\n}\r\n\r\nwindow.addEventListener(\"click\", (event) => {\r\n  // console.log(event.target);\r\n  if (!wrap.contains(event.target) && cur_select.classList.contains(\"active\")) {\r\n    toggleList();\r\n  }\r\n});\r\n//#endregion\r\n\r\n//#region Events\r\nmethod.callBack = function () {\r\n  start_btn.firstChild.classList = \"fas fa-play\";\r\n};\r\nstart_btn.addEventListener(\"click\", () => {\r\n  if(!ran_con) method.status = !method.status;\r\n  // start_btn.innerHTML = method.status ? \"Stop\" : \"Start\";\r\n  method.status\r\n    ? (() => {\r\n        start_btn.firstChild.classList = \"fas fa-pause\";\r\n        start_sort();\r\n      })()\r\n    : (() => {\r\n        stop_sort();\r\n      })();\r\n});\r\n\r\nwindow.addEventListener(\"resize\", setup);\r\n// cur_select.addEventListener(\"method_changed\", change_method, false);\r\nnum_ip.addEventListener(\"change\", () => {\r\n  stop_sort();\r\n  method.num = parseInt(num_ip.value);\r\n  if (method.num < +num_ip.min || method.num > +num_ip.max || !num_ip.value) {\r\n    num_ip.value = default_num;\r\n    method.num = default_num;\r\n    alert(\"Invalid number (Too high or too low)\");\r\n  }\r\n  setup();\r\n});\r\n\r\nran_btn.addEventListener(\"click\", async () =>{ \r\n  stop_sort();\r\n  if(!ran_con){\r\n    ran_con = 1;\r\n    num_ip.disabled = true;\r\n    await method.shuffle();\r\n    ran_con = 0;\r\n    num_ip.disabled = false;\r\n  }\r\n});\r\nstop_btn.addEventListener(\"click\", stop_sort);\r\n//#endregion\r\n\r\n//#region Setup\r\nfunction setup() {\r\n  main_canvas.width =\r\n    window.innerWidth ||\r\n    document.documentElement.clientWidth ||\r\n    document.body.clientWidth;\r\n  main_canvas.height =\r\n    window.innerHeight - nav_bar.clientHeight ||\r\n    document.documentElement.clientHeight - nav_bar.clientHeight ||\r\n    document.body.clientHeight - nav_bar.clientHeight;\r\n  method.c_height = main_canvas.height;\r\n  method.c_width = main_canvas.width;\r\n\r\n  method.setRandomData();\r\n  for (var i = 0, l = method.data.length; i !== l; i++) {\r\n    method.data[i][0] = ~~(i * method.col_w);\r\n  }\r\n  method.set_fill();\r\n  method.showData();\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", setup);\r\n//#endregion\r\n\r\n// // let fn = '';\r\n// function change_method() {\r\n// \tmethod.status = 0;\r\n// \tmethod.callBack();\r\n// \t// fn = `method[\"${cur_select.getAttribute(\"value\").toLowerCase()}\"]()`;\r\n// }\r\n// change_method();\r\n\r\nasync function start_sort() {\r\n  if (method.num >= +num_ip.min){\r\n    console.clear();\r\n    //Start Timer\r\n    const start = new Date().getTime();\r\n    console.log(`Start: ${start}`);\r\n\r\n    await method[cur_select.getAttribute(\"value\").toLowerCase()]?.();\r\n\r\n    //End Timer\r\n    const end = new Date().getTime();\r\n    console.log(`End: ${end}`);\r\n    console.log(`Time taken: ${end - start}ms`); //Time taken\r\n  }\r\n  // start_btn.removeEventListener(\"click\", start_sort);\r\n  // method.Isort();\r\n  // start_btn.addEventListener(\"click\", start_sort);\r\n}\r\n\r\nfunction stop_sort() {\r\n  method.status = 0;\r\n  method.callBack();\r\n}\r\n"]}