{"version":3,"sources":["JS/Methods.js","JS/Sorting.js"],"names":["Method","constructor","num","data","canvas","c","getContext","c_height","height","c_width","width","col_w","status","req","speed","description","Object","keys","prototype","map","s","split","s1","toUpperCase","substr","join","sort","mode","showData","clearRect","a","i","l","length","fillRect","redLine","data_pair","color","set_fill","setRandomData","cur_l","pop","push","Math","random","end_sort","cancelAnimationFrame","fillStyle","callBack","style","sleep","Promise","requestAnimationFrame","toLowerCase","count","max","temp","t","main","gap","con","pgap","merge_sort","r","m","merge","L","slice","R","il","dl","dr","undefined","temp_index","min","inc","quickSort","pivot_index","partition_h","con_i","con_j","pivot_value","j","document","querySelector","nav_bar","start_btn","current_opt","num_ip","method","parseInt","value","default_num","tag","createElement","text","createTextNode","appendChild","classList","add","wrap","cur_select","setAttribute","innerHTML","caret","select_list","select_items","toggle","addEventListener","firstChild","toggleList","setup","window","innerWidth","innerHeight","offsetHeight","start_sort","console","clear","start","Date","getTime","log","getAttribute","end","stop_sort","event","contains","target","lastChild","alert"],"mappings":"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","file":"Sorting.457dbe02.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\r\n\r\nexport default class Method {\r\n  constructor(num, data, canvas) {\r\n    this.c = canvas.getContext(\"2d\");\r\n    this.data = data;\r\n    this.c_height = canvas.height;\r\n    this.c_width = canvas.width;\r\n    this.num = num;\r\n    this.col_w = this.c_width / this.num;\r\n    this.status = 0;\r\n    this.req = 0;\r\n    this.speed = 1;\r\n    this.description = Object.keys(Method.prototype)\r\n      .map((s) =>\r\n        s\r\n          .split(\" \")\r\n          .map((s1) => s1[0].toUpperCase() + s1.substr(1))\r\n          .join(\" \")\r\n      )\r\n      .sort();\r\n    this.mode = \"column\";\r\n  }\r\n  showData() {\r\n    this.c.clearRect(0, 0, this.c_width, this.c_height);\r\n    var a = (this.col_w * this.num) / this.c_width;\r\n    for (var i = 0, l = this.data.length; i !== l; i++) {\r\n      this.c.fillRect(\r\n        this.data[i][0] - a,\r\n        this.c_height - this.data[i][1],\r\n        this.col_w + a,\r\n        this.data[i][1]\r\n      );\r\n    }\r\n  }\r\n  redLine(data_pair, color = \"#ff0505\") {\r\n    this.set_fill(color);\r\n    this.c.fillRect(\r\n      data_pair[0] - this.col_w / (this.c_width / this.num),\r\n      this.c_height - data_pair[1],\r\n      this.col_w + this.col_w / (this.c_width / this.num),\r\n      data_pair[1]\r\n    );\r\n    this.set_fill();\r\n  }\r\n  setRandomData() {\r\n    this.col_w = this.c_width / this.num;\r\n    let cur_l = this.data.length;\r\n    if (this.num < cur_l) {\r\n      for (let i = 0; i < -this.num + cur_l; i++) {\r\n        this.data.pop();\r\n      }\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.num - cur_l * (this.num >= cur_l); i++) {\r\n      this.data.push([\r\n        i * this.col_w,\r\n        ~~(this.c_height - (Math.random() * (this.c_height - 5))),\r\n      ]);\r\n      //cos//this.data.push([i * this.col_w, (this.c_height - (Math.cos(this.data.length / 10) + 1) * this.c_height/2 )]);\r\n      //sin//this.data.push([i * this.col_w, (this.c_height - (Math.sin(this.data.length / 10) + 1) * this.c_height / 2)]);\r\n    }\r\n  }\r\n  end_sort() {\r\n    cancelAnimationFrame(this.req);\r\n    this.c.fillStyle = \"#00ff00\";\r\n    this.showData();\r\n    this.status = 0;\r\n    this.callBack();\r\n  }\r\n  set_fill(style = \"#f0f0f0\") {\r\n    this.c.fillStyle = style;\r\n  }\r\n  callBack() {}\r\n  async sleep() {\r\n    return new Promise(requestAnimationFrame);\r\n  }\r\n}\r\n\r\n//#region Bubble Sort\r\nMethod.prototype[\"Bubble sort\".toLowerCase()] = async function() {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let count = 0,\r\n    i = 0,\r\n    max = this.num,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for (;;) {\r\n      if (!this.status) return 0;\r\n      await this.sleep();\r\n      this.showData();\r\n      this.redLine(this.data[i]);\r\n\r\n      if (i + 1 < max && this.data[i][1] > this.data[i + 1][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i + 1][1];\r\n        this.data[i + 1][1] = temp;\r\n        // [this.data[i][1], this.data[i+1][1]] = [this.data[i+1][1], this.data[i][1]];\r\n        count = 0;\r\n      } else {\r\n        count++;\r\n      }\r\n      if (count >= max) {\r\n        return 1;\r\n      }\r\n      i++;\r\n      if (i >= max) {\r\n        max -= count;\r\n        count = 0;\r\n        i = 0;\r\n      }\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if(!t) return;\r\n  this.end_sort()\r\n};\r\n//#endregion\r\n\r\n//#region Comb Sort\r\nMethod.prototype[\"Comb sort\".toLowerCase()] = async function(){\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let max = this.data.length - 1,\r\n    gap = ~~((this.data.length * 10) / 13), \r\n    i = 0,\r\n    temp = 0,\r\n    count = 0,\r\n    con = 0,\r\n    pgap = gap;\r\n\r\n  let main = async () => {\r\n    for (;;) {\r\n      if (!this.status) return 0;\r\n      await this.sleep()\r\n      this.showData();\r\n      this.redLine(this.data[i]);\r\n      if (i + gap <= max && this.data[i][1] > this.data[i + gap][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i + gap][1];\r\n        this.data[i + gap][1] = temp;\r\n        // [this.data[i][1], this.data[i+1][1]] = [this.data[i+1][1], this.data[i][1]];\r\n        if (con) gap = pgap;\r\n        con = 0;\r\n        count = 0;\r\n      } else {\r\n        count++;\r\n      }\r\n      this.redLine(this.data[i + gap]);\r\n      i++;\r\n      if (i + gap > max) {\r\n        i = 0;\r\n        pgap = gap;\r\n        gap = ~~((gap * 10) / 13);\r\n        if (gap < 1 && count >= max) {\r\n          return 1;\r\n        } else if (gap < 1 || count >= max - pgap) {\r\n          con = 1;\r\n          gap = 1;\r\n        }\r\n        count = 0;\r\n      }\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if (!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Insertion Sort\r\nMethod.prototype[\"Insertion sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let max = 1,\r\n    i = max + 1,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for(;;){\r\n      if (!this.status) return 0;\r\n      await this.sleep();\r\n      this.showData();\r\n      this.redLine(this.data[i - 1]);\r\n      i--;\r\n      if (i - 1 >= 0 && this.data[i][1] < this.data[i - 1][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i - 1][1];\r\n        this.data[i - 1][1] = temp;\r\n        // [this.data[i][1], this.data[i-1][1]] = [this.data[i-1][1], this.data[i][1]];\r\n      } else {\r\n        max++;\r\n        i = max + 1;\r\n        // count = 0;\r\n      }\r\n      if (max >= this.num) {      \r\n        return 1;\r\n      }\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if(!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Merge Sort\r\nMethod.prototype[\"Merge sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let merge_sort = async (l, r) => {\r\n    if (l < r) {\r\n      var m = ~~(l + (r - l) / 2);\r\n      await merge_sort(l, m);\r\n      await merge_sort(m + 1, r);\r\n\r\n      await merge(l, m, r);\r\n    }\r\n    if (!this.status) return -1;\r\n  }\r\n\r\n  let merge = async (l, m, r) => {\r\n    let L = this.data.slice(l, m + 1);\r\n    let R = this.data.slice(m + 1, r + 1);\r\n    let il = L.length + R.length;\r\n    for (let dl = 0, dr = 0; dl + dr < il; dl++, dr++) {\r\n      if (!this.status) return -1;\r\n      await this.sleep();\r\n      this.showData();\r\n      if (R[dr]?.[1] === undefined || L[dl]?.[1] < R[dr]?.[1]) {\r\n        this.data[dl + dr + l] = [this.data[dl + dr + l][0], L[dl][1]];\r\n        this.redLine(this.data[dl + dr + l]);\r\n        dr--;\r\n      } else {\r\n        this.data[dl + dr + l] = [this.data[dl + dr + l][0], R[dr][1]];\r\n        this.redLine(this.data[dl + dr + l]);\r\n        dl--;\r\n      }\r\n    }\r\n  };\r\n  let t = await merge_sort(0, this.data.length - 1) || 1;\r\n  this.showData();\r\n  if(t === -1) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Shell Sort\r\nMethod.prototype[\"Shell sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1; \r\n  let max = this.data.length,\r\n    gap = ~~(this.data.length / 2),\r\n    i = gap,\r\n    temp_index = gap,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for (;;) {\r\n      if (!this.status) return 0;\r\n      await this.sleep();\r\n      if (\r\n        temp_index - gap >= 0 &&\r\n        this.data[temp_index][1] < this.data[temp_index - gap][1]\r\n      ) {\r\n        temp = this.data[temp_index][1];\r\n        this.data[temp_index][1] = this.data[temp_index - gap][1];\r\n        this.data[temp_index - gap][1] = temp;\r\n        // [this.data[temp_index][1], this.data[temp_index - gap][1]] = [this.data[temp_index - gap][1], this.data[temp_index][1]];\r\n        temp_index -= gap;\r\n        // changes++;\r\n        // if (con) gap = pgap;\r\n        // con = 0;\r\n      } else {\r\n        i++;\r\n        temp_index = i;\r\n      }\r\n      this.showData();\r\n      this.redLine(this.data[temp_index - gap * (temp_index >= gap)]);\r\n      if (i >= max) {\r\n        gap = ~~(gap / 2);\r\n        i = gap;\r\n        temp_index = gap;\r\n        // pgap = gap;\r\n        // if (con) {gap = 0; i = gap;}\r\n        // else {\r\n        // \tif(changes){\r\n        // \t\tgap = ~~(gap / 2);\r\n        // \t\ti = gap;\r\n        // \t\ttemp_index = gap;\r\n        // \t}\r\n        // \telse{\r\n        // \t\tgap = 1;\r\n        // \t\tcon = 1;\r\n        // \t\ti = gap;\r\n        // \t\ttemp_index = gap;\r\n        // \t}\r\n        // }\r\n        if (gap < 1) {\r\n          return 1;\r\n        }\r\n      }\r\n      this.redLine(this.data[i]);\r\n    }\r\n  }\r\n  let t = await main();\r\n  this.showData();\r\n  if(!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Cocktail Shaker Sort\r\nMethod.prototype[\"Cocktail sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let i = 0,\r\n    min = 0,\r\n    max = this.data.length - 1,\r\n    inc = 1,\r\n    temp = 0,\r\n    count = 0;\r\n  let main = async () => {\r\n    for(;;){\r\n      if (!this.status) return 0;\r\n      await this.sleep();\r\n      this.showData();\r\n      this.redLine(this.data[i]);\r\n\r\n      if (min <= i + inc && i + inc <= max) {\r\n        if (\r\n          (inc > 0 && this.data[i][1] > this.data[i + inc][1]) ||\r\n          (inc < 0 && this.data[i][1] < this.data[i - 1][1])\r\n        ) {\r\n          temp = this.data[i][1];\r\n          this.data[i][1] = this.data[i + inc][1];\r\n          this.data[i + inc][1] = temp;\r\n          count = 0;\r\n        } else {\r\n          count++;\r\n        }\r\n        i += inc;\r\n      } else {\r\n        inc = -inc;\r\n        if (i >= max) {\r\n          max -= count;\r\n          i = max;\r\n        } else {\r\n          min += count;\r\n          i = min;\r\n        }\r\n      }\r\n      if (min > max) {\r\n        return 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  let t = await main();\r\n  this.showData();\r\n  if(!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Quick Sort\r\nMethod.prototype[\"Quick Sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let temp = 0;\r\n\r\n  let quickSort = async (l, r) => {\r\n    if (l < r) {\r\n      let pivot_index = await partition_h(l, r);\r\n      if (pivot_index === -1) return pivot_index;\r\n      await quickSort(l, pivot_index);\r\n      await quickSort(pivot_index + 1, r);\r\n    }\r\n    if (!this.status) return -1;\r\n  };\r\n  //Lomuto Partition\r\n  // let partition_l = async (l, r) => {\r\n  // \tlet pivot_value = this.data[r][1];\r\n  // \tlet temp = 0;\r\n  // \tlet i = l, j = 0;\r\n\r\n  // \tfor(j = l; j < r; j++){\r\n  // \t\tawait this.sleep();\r\n  // \t\tthis.showData();\r\n  // \t\tthis.redLine(this.data[i]);\r\n  // \t\tthis.redLine(this.data[j]);\r\n  // \t\tif(this.data[j][1] <= pivot_value){\r\n  // \t\t\ttemp = this.data[i][1]; //swap\r\n  // \t\t\tthis.data[i][1] = this.data[j][1];\r\n  // \t\t\tthis.data[j][1] = temp;\r\n  // \t\t\ti++;\r\n  // \t\t}\r\n  // \t}\r\n  // \ttemp = this.data[i][1]; //swap\r\n  // \tthis.data[i][1] = this.data[r][1];\r\n  // \tthis.data[r][1] = temp;\r\n  // \treturn i;\r\n  // }\r\n\r\n  //Hoare partition\r\n  let partition_h = async (l, r) => {\r\n    let con_i = 0,\r\n      con_j = 0;\r\n    //#region --Random pivot--\r\n    // var ran = Math.floor(Math.random() * (r - l + 1) + l);\r\n    // temp = this.data[ran][1]; //swap\r\n    // this.data[ran][1] = this.data[l][1];\r\n    // this.data[l][1] = temp;\r\n\r\n    // this.redLine(this.data[ran]);\r\n    // this.redLine(this.data[l]);\r\n    //#endregion\r\n    let pivot_value = this.data[l][1];\r\n    let i = l - 1,\r\n      j = r + 1;\r\n\r\n    for (;;) {\r\n      if (!this.status) return -1;\r\n      await this.sleep();\r\n      if (!con_i) {\r\n        i++;\r\n        if (this.data[i][1] >= pivot_value) {\r\n          con_i = 1;\r\n        }\r\n      }\r\n      if (con_i) {\r\n        j--;\r\n        if (this.data[j][1] <= pivot_value) {\r\n          con_j = 1;\r\n        }\r\n      }\r\n      this.showData();\r\n      this.redLine(this.data[i]);\r\n      this.redLine(this.data[j - 1 * !con_i]);\r\n\r\n      if (con_i && con_j) {\r\n        if (i >= j) return j;\r\n        else {\r\n          con_i = 0;\r\n          con_j = 0;\r\n          temp = this.data[i][1]; //swap\r\n          this.data[i][1] = this.data[j][1];\r\n          this.data[j][1] = temp;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  let t = await quickSort(0, this.data.length - 1) || 1;\r\n  this.showData();\r\n  if(t === -1) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region ______OLD_____\r\n\r\n//Merge sort algorithm\r\n// let queue = [];\r\n// (function merge_index(l,r){\r\n// \tif(l<r){\r\n// \t\tvar m = ~~(l + (r - l) / 2);\r\n// \t\tmerge_index(l,m);\r\n// \t\tmerge_index(m+1, r);\r\n// \t\tqueue.push([l,m,r]);\r\n// \t}\r\n// })(0, this.data.length - 1);\r\n// // console.log(queue);\r\n// let q_i = 0\r\n// let l = queue[q_i][0];\r\n// let m = queue[q_i][1];\r\n// let r = queue[q_i][2];\r\n// let a1 = this.data.slice(l, m + 1);\r\n// let a2 = this.data.slice(m + 1, r + 1);\r\n// let l1 = 0, l2 = 0, con = 0;\r\n// let main = () =>{\r\n// \tthis.req = requestAnimationFrame(main);\r\n// \tif (l + l1 > m && m + 1 + l2 > r) {\r\n// \t\tq_i++;\r\n// \t\tif (q_i >= queue.length) {\r\n// \t\t\tthis.end_sort();\r\n// \t\t\t//End Timer\r\n// \t\t\tconst end = new Date().getTime();\r\n// \t\t\tconsole.log(`End: ${end}`);\r\n// \t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\tl = queue[q_i][0];\r\n// \t\t\tm = queue[q_i][1];\r\n// \t\t\tr = queue[q_i][2];\r\n// \t\t\ta1 = this.data.slice(l, m + 1);\r\n// \t\t\ta2 = this.data.slice(m + 1, r + 1);\r\n// \t\t\tl1 = 0;\r\n// \t\t\tl2 = 0;\r\n// \t\t}\r\n// \t}\r\n// \telse if ((con = l + l1 > m) || m + 1 + l2 > r){\r\n// \t\tthis.data[l + l1 + l2] = [this.data[l + l1 + l2][0], con ? a2[l2][1] : a1[l1][1]];\r\n// \t\tthis.showData();\r\n// \t\tc.fillStyle = \"#00ffff\";//cyan\r\n// \t\tc.fillRect(this.data[m + 1][0], this.c_height - this.data[m + 1][1], this.col_w, this.data[m + 1][1]);\r\n// \t\tthis.set_fill();\r\n// \t\t//Red line\r\n// \t\tthis.redLine(this.data[l + l1 + l2]);\r\n// \t\tcon? l2++ : l1++;\r\n// \t}\r\n// \telse{\r\n// \t\tcon = a1[l1][1] > a2[l2][1];\r\n// \t\tthis.data[l + l1 + l2] = [this.data[l + l1 + l2][0], con ? a2[l2][1] : a1[l1][1]];\r\n// \t\tthis.showData();\r\n// \t\tc.fillStyle = \"#00ffff\";//cyan\r\n// \t\tc.fillRect(this.data[m + 1][0], this.c_height - this.data[m + 1][1], this.col_w, this.data[m + 1][1]);\r\n// \t\tthis.set_fill();\r\n// \t\t//Red line\r\n// \t\tthis.redLine(this.data[l + l1 + l2]);\r\n// \t\tcon ? l2++ : l1++;\r\n// \t\t}\r\n// }\r\n// main();\r\n//#endregion\r\n","import Method from \"./Methods.js\";\r\n\r\nlet canvas = document.querySelector(\"canvas\");\r\nlet nav_bar = document.querySelector(\".nav-bar\");\r\nlet start_btn = document.querySelector(\".start\");\r\nlet current_opt = document.querySelector(\".selection\");\r\nlet num_ip = document.querySelector(\".ip\");\r\n\r\n// let num = parseInt(num_ip.value);\r\nlet data = [];\r\n\r\nlet method = new Method(parseInt(num_ip.value), data, canvas);\r\nlet default_num = parseInt(num_ip.value);\r\n\r\n//#region Custom Selection\r\nfor (let i of method.description) {\r\n  let tag = document.createElement(\"OPTION\");\r\n  let text = document.createTextNode(i);\r\n  tag.appendChild(text);\r\n  tag.classList.add(\"opts\");\r\n  // tag.value = i.match(/^(?:\\w){2}/g).join(\"\").trim() + \"sort\";\r\n  tag.value = i.toLowerCase();\r\n  current_opt.appendChild(tag);\r\n}\r\n\r\n// const eve = new Event(\"method_changed\")\r\n\r\nlet wrap = document.querySelector(\".option-wrap\");\r\nlet l = current_opt.length;\r\n\r\nlet cur_select = document.createElement(\"DIV\");\r\ncur_select.setAttribute(\"class\", \"current-select\");\r\ncur_select.setAttribute(\"value\", current_opt[0].innerHTML.toLowerCase());\r\ncur_select.innerHTML = current_opt[0].innerHTML;\r\n\r\nlet caret = document.createElement(\"I\");\r\ncaret.setAttribute(\"class\", \"fas fa-caret-down arrow-down\");\r\ncur_select.appendChild(caret);\r\n\r\nwrap.appendChild(cur_select);\r\n\r\nlet select_list = document.createElement(\"DIV\"),\r\n  select_items = [];\r\nselect_list.setAttribute(\"class\", \"select-items\");\r\nselect_list.classList.toggle(\"hide-items\");\r\nfor (let i = 0; i < l; i++) {\r\n  // console.log(current_opt[i]);\r\n  select_items.push(document.createElement(\"DIV\"));\r\n  select_items[i].setAttribute(\"class\", \"choices\");\r\n  select_items[i].innerHTML = current_opt[i].innerHTML;\r\n  select_items[i].addEventListener(\"click\", () => {\r\n    cur_select.firstChild.data = select_items[i].innerHTML;\r\n    cur_select.setAttribute(\"value\", select_items[i].innerHTML.toLowerCase());\r\n    // cur_select.dispatchEvent(eve);\r\n    method.status = 0;\r\n    method.callBack();\r\n  });\r\n  select_list.appendChild(select_items[i]);\r\n}\r\n\r\nwrap.appendChild(select_list);\r\n\r\nwrap.addEventListener(\"click\", toggleList);\r\n\r\nfunction toggleList() {\r\n  cur_select.classList.toggle(\"active\");\r\n  select_list.classList.toggle(\"hide-items\");\r\n}\r\n\r\nwindow.addEventListener(\"click\", (event) => {\r\n  // console.log(event.target);\r\n  if (!wrap.contains(event.target) && cur_select.classList.contains(\"active\")) {\r\n    toggleList();\r\n  }\r\n});\r\n//#endregion\r\n\r\nstart_btn.addEventListener(\"click\", () => {\r\n  method.status = !method.status;\r\n  // start_btn.innerHTML = method.status ? \"Stop\" : \"Start\";\r\n  method.status\r\n    ? (() => {\r\n        start_btn.firstChild.classList = \"fas fa-pause\";\r\n        start_btn.lastChild.data = \" STOP\";\r\n        start_sort();\r\n      })()\r\n    : (() => {\r\n        stop_sort();\r\n      })();\r\n});\r\nmethod.callBack = function () {\r\n  start_btn.firstChild.classList = \"fas fa-play\";\r\n  start_btn.lastChild.data = \" START\";\r\n};\r\nwindow.addEventListener(\"resize\", setup);\r\n// cur_select.addEventListener(\"method_changed\", change_method, false);\r\nnum_ip.addEventListener(\"change\", () => {\r\n  stop_sort();\r\n  method.num = parseInt(num_ip.value);\r\n  if (method.num < +num_ip.min || method.num > +num_ip.max) {\r\n    num_ip.value = default_num;\r\n    method.num = default_num;\r\n    alert(\"Invalid number (Too high or too low)\");\r\n  }\r\n  setup();\r\n});\r\n\r\n//#region Setup\r\nfunction setup() {\r\n  canvas.width = window.innerWidth;\r\n  canvas.height = window.innerHeight - nav_bar.offsetHeight;\r\n  method.c_height = canvas.height;\r\n  method.c_width = canvas.width;\r\n\r\n  method.setRandomData();\r\n  for (var i = 0, l = method.data.length; i !== l; i++) {\r\n    method.col_w = method.c_width / method.num;\r\n    method.data[i][0] = i * method.col_w;\r\n  }\r\n\r\n  method.set_fill();\r\n  method.showData();\r\n}\r\nsetup();\r\n//#endregion\r\n\r\n// // let fn = '';\r\n// function change_method() {\r\n// \tmethod.status = 0;\r\n// \tmethod.callBack();\r\n// \t// fn = `method[\"${cur_select.getAttribute(\"value\").toLowerCase()}\"]()`;\r\n// }\r\n// change_method();\r\n\r\nasync function start_sort() {\r\n  if (method.num >= +num_ip.min){\r\n    console.clear();\r\n    //Start Timer\r\n    const start = new Date().getTime();\r\n    console.log(`Start: ${start}`);\r\n\r\n    await method[cur_select.getAttribute(\"value\").toLowerCase()]?.();\r\n\r\n    //End Timer\r\n    const end = new Date().getTime();\r\n    console.log(`End: ${end}`);\r\n    console.log(`Time taken: ${end - start}ms`); //Time taken\r\n  }\r\n  // start_btn.removeEventListener(\"click\", start_sort);\r\n  // method.Isort();\r\n  // start_btn.addEventListener(\"click\", start_sort);\r\n}\r\n\r\nfunction stop_sort() {\r\n  method.status = 0;\r\n  method.callBack();\r\n}\r\n"]}