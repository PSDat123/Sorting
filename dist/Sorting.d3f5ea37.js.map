{"version":3,"sources":["JS/Methods.js","JS/Sorting.js"],"names":["Method","constructor","num","data","canvas","c","getContext","c_height","height","c_width","width","col_w","status","req","speed","description","Object","keys","prototype","map","s","split","s1","toUpperCase","substr","join","sort","updatePara","i","l","length","showData","clearRect","a","fillRect","redLine","data_pair","color","set_fill","setRandomData","cur_l","pop","push","Math","random","end_sort","cancelAnimationFrame","fillStyle","callBack","style","toLowerCase","start","Date","getTime","console","log","count","max","temp","main","requestAnimationFrame","n","end","gap","con","pgap","merge","m","r","L","slice","R","il","dl","dr","Promise","undefined","merge_sort","temp_index","min","inc","sleep","partition_l","partition_h","pivot_value","con_i","con_j","j","quickSort","pivot_index","document","querySelector","nav_bar","start_btn","current_opt","num_ip","method","parseInt","value","default_num","tag","createElement","text","createTextNode","appendChild","classList","add","eve","Event","wrap","cur_select","setAttribute","innerHTML","caret","select_list","select_items","toggle","addEventListener","firstChild","dispatchEvent","toggleList","setup","window","innerWidth","innerHeight","offsetHeight","event","contains","target","lastChild","start_sort","stop_sort","change_method","alert","fn","getAttribute"],"mappings":"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","file":"Sorting.d3f5ea37.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nexport default class Method{\r\n\tconstructor(num, data, canvas){\r\n\t\tthis.c = canvas.getContext(\"2d\");\r\n\t\tthis.data = data;\r\n\t\tthis.c_height = canvas.height;\r\n\t\tthis.c_width = canvas.width;\r\n\t\tthis.num = num;\r\n\t\tthis.col_w = this.c_width / this.num;\r\n\t\tthis.status = 0;\r\n\t\tthis.req = 0;\r\n\t\tthis.speed = 1;\r\n\t\tthis.description = Object.keys(Method.prototype)\r\n\t\t\t\t\t\t\t.map(s => s.split(\" \")\r\n\t\t\t\t\t\t\t\t.map(s1 => s1[0].toUpperCase() + s1.substr(1)).join(\" \")).sort();\r\n\t}\r\n\tupdatePara(){\r\n\t\tfor (var i = 0, l = this.data.length; i !== l; i++) {\r\n\t\t\tthis.col_w = this.c_width / this.num;\r\n\t\t\tthis.data[i][0] = i * this.col_w;\r\n\t\t}\r\n\t}\r\n\tshowData(){\r\n\t\tthis.c.clearRect(0, 0, this.c_width, this.c_height);\r\n\t\tvar a = (this.col_w * this.num ) / this.c_width;\r\n\t\tfor (var i = 0, l = this.data.length; i !== l; i++) {\r\n\t\t\tthis.c.fillRect(this.data[i][0] - a, this.c_height - this.data[i][1], this.col_w + a, this.data[i][1]);\r\n\t\t}\r\n\t}\r\n\tredLine(data_pair, color = \"#ff0505\") {\r\n\t\tthis.set_fill(color);\r\n\t\tthis.c.fillRect(data_pair[0] - this.col_w / (this.c_width / this.num), this.c_height - data_pair[1], this.col_w + this.col_w / (this.c_width / this.num), data_pair[1]);\r\n\t\tthis.set_fill();\r\n\t}\r\n\tsetRandomData(){\r\n\t\tthis.col_w = this.c_width / this.num;\r\n\t\tlet cur_l = this.data.length;\r\n\t\tif (this.num < cur_l){\r\n\t\t\tfor (let i = 0; i < - this.num + cur_l; i++) {\r\n\t\t\t\tthis.data.pop();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.num - cur_l * (this.num >= cur_l); i++) {\r\n\t\t\tthis.data.push([i * this.col_w, ~~(this.c_height - Math.random() * this.c_height)]);\r\n\t\t\t//cos//this.data.push([i * this.col_w, (this.c_height - (Math.cos(this.data.length / 10) + 1) * this.c_height/2 )]);\r\n\t\t\t//sin//this.data.push([i * this.col_w, (this.c_height - (Math.sin(this.data.length / 10) + 1) * this.c_height / 2)]);\r\n\t\t}\r\n\t}\r\n\tend_sort(){\r\n\t\tcancelAnimationFrame(this.req);\r\n\t\tthis.c.fillStyle = \"#00ff00\";\r\n\t\tthis.showData();\r\n\t\tthis.status = 0;\r\n\t\tthis.callBack();\r\n\t}\r\n\tset_fill(style=\"#f0f0f0\"){\r\n\t\tthis.c.fillStyle = style;\r\n\t}\r\n\tcallBack(){\r\n\r\n\t}\r\n}\r\n//Bubble sort\r\nMethod.prototype[\"Bubble sort\".toLowerCase()] = function(){\r\n\tthis.set_fill();\r\n\tthis.status = 1;\r\n\t//Start Timer\r\n\tconst start = new Date().getTime();\r\n\tconsole.log(`Start: ${start}`);\r\n\r\n\tlet count = 0;\r\n\tlet i = 0;\r\n\tlet max = this.num;\r\n\tlet temp = 0;\r\n\tlet main = () => {\r\n\t\tthis.req = requestAnimationFrame(main);\r\n\t\tthis.showData();\r\n\t\tthis.redLine(this.data[i]);\r\n\t\tfor(let n = 0, s = this.speed; n < s; n++){\r\n\t\t\tif(i + 1 < max && this.data[i][1] > this.data[i+1][1]){\r\n\t\t\t\ttemp = this.data[i][1];\r\n\t\t\t\tthis.data[i][1] = this.data[i + 1][1];\r\n\t\t\t\tthis.data[i + 1][1] = temp;\r\n\t\t\t\t// [this.data[i][1], this.data[i+1][1]] = [this.data[i+1][1], this.data[i][1]];\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcount++;\r\n\t\t\t}\t\r\n\t\t\tif (count >= max){\r\n\t\t\t\tthis.end_sort();\r\n\t\t\t\t//End Timer\r\n\t\t\t\tconst end = new Date().getTime();\r\n\t\t\t\tconsole.log(`End: ${end}`);\r\n\t\t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\tif(i >= max){\r\n\t\t\t\tmax-= count;\r\n\t\t\t\tcount = 0;\r\n\t\t\t\ti = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tmain();\r\n}\r\n//Comb sort\r\nMethod.prototype[\"Comb sort\".toLowerCase()] = function () {\r\n\tthis.set_fill();\r\n\tthis.status = 1;\r\n\t//Start Timer\r\n\tconst start = new Date().getTime();\r\n\tconsole.log(`Start: ${start}`);\r\n\r\n\tlet max = this.data.length - 1;\r\n\tlet gap = ~~((this.data.length * 10) / 13);\r\n\tlet i = 0, temp = 0, count = 0, con = 0, pgap = gap;\r\n\r\n\tlet main = () => {\r\n\t\tthis.req = requestAnimationFrame(main);\r\n\t\tthis.showData();\r\n\t\tthis.redLine(this.data[i]);\r\n\t\tfor (let n = 0, s = this.speed; n < s; n++) {\r\n\t\t\tif (i + gap <= max && this.data[i][1] > this.data[i + gap][1]) {\r\n\t\t\t\ttemp = this.data[i][1];\r\n\t\t\t\tthis.data[i][1] = this.data[i + gap][1];\r\n\t\t\t\tthis.data[i + gap][1] = temp;\r\n\t\t\t\t// [this.data[i][1], this.data[i+1][1]] = [this.data[i+1][1], this.data[i][1]];\r\n\t\t\t\tif(con) gap = pgap;\r\n\t\t\t\tcon = 0;\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t\telse {\t\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tif (n == s-1) this.redLine(this.data[i + gap]);\t\r\n\t\t\ti++;\r\n\t\t\tif (i + gap > max) {\r\n\t\t\t\ti = 0;\r\n\t\t\t\tpgap = gap;\r\n\t\t\t\tgap = ~~((gap * 10) / 13);\r\n\t\t\t\tif (gap < 1 && count >= max) {\r\n\t\t\t\t\tthis.end_sort();\r\n\t\t\t\t\t//End Timer\r\n\t\t\t\t\tconst end = new Date().getTime();\r\n\t\t\t\t\tconsole.log(`End: ${end}`);\r\n\t\t\t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse if (gap < 1 || count >= max - pgap) {\r\n\t\t\t\t\tcon = 1;\r\n\t\t\t\t\tgap = 1;\r\n\t\t\t\t}\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tmain();\r\n}\r\n//Insertion sort\r\nMethod.prototype[\"Insertion sort\".toLowerCase()] = function(){\r\n\tthis.set_fill();\r\n\tthis.status = 1;\r\n\t//Start Timer\r\n\tconst start = new Date().getTime();\r\n\tconsole.log(`Start: ${start}`);\r\n\r\n\tlet max = 1;\r\n\tlet i = max + 1;\r\n\tlet temp = 0;\r\n\tlet main = () => {\r\n\t\tthis.req = requestAnimationFrame(main);\r\n\t\t\r\n\t\tthis.showData();\r\n\t\tthis.redLine(this.data[i-1]);\r\n\t\tfor(let n = 0; n < this.speed; n++){\r\n\t\t\ti--;\r\n\t\t\tif(i - 1 >= 0 && this.data[i][1] < this.data[i-1][1]){\r\n\t\t\t\ttemp = this.data[i][1];\r\n\t\t\t\tthis.data[i][1] = this.data[i - 1][1];\r\n\t\t\t\tthis.data[i - 1][1] = temp;\r\n\t\t\t\t// [this.data[i][1], this.data[i-1][1]] = [this.data[i-1][1], this.data[i][1]];\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tmax++;\r\n\t\t\t\ti=max + 1;\r\n\t\t\t\t// count = 0;\r\n\t\t\t}\r\n\t\t\tif(max >= this.num) {\r\n\t\t\t\tthis.end_sort();\r\n\t\t\t\t//End Timer\r\n\t\t\t\tconst end = new Date().getTime();\r\n\t\t\t\tconsole.log(`End: ${end}`);\r\n\t\t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tmain();\r\n}\r\n//Merge Sort\r\nMethod.prototype[\"Merge sort\".toLowerCase()] = function (){\r\n\tthis.set_fill();\r\n\tthis.status = 1;\r\n\t//Start Timer\r\n\tconst start = new Date().getTime();\r\n\tconsole.log(`Start: ${start}`);\r\n\r\n\tfunction sleep(){\r\n\t\treturn new Promise(requestAnimationFrame);\r\n\t}\r\n\tasync function merge_sort(l,r){\r\n\t\tif(l < r){\r\n\t\t\tvar m = ~~(l + (r - l) / 2);\r\n\t\t\tawait merge_sort(l, m);\r\n\t\t\tawait merge_sort(m + 1, r);\r\n\r\n\t\t\tawait merge(l, m ,r);\r\n\t\t}\r\n\t}\r\n\r\n\tlet merge = async (l, m, r) => {\r\n\t\tlet L = this.data.slice(l, m + 1);\r\n\t\tlet R = this.data.slice(m + 1, r + 1);\r\n\t\tlet il = L.length + R.length;\t\r\n\t\tfor (let dl = 0, dr = 0; dl + dr < il; dl++, dr++){\r\n\t\t\tawait sleep();\r\n\t\t\tthis.showData();\r\n\t\t\tif (R[dr]?.[1] === undefined || L[dl]?.[1] < R[dr]?.[1]){\r\n\t\t\t\tthis.data[dl + dr + l] = [this.data[dl + dr + l][0], L[dl][1]];\r\n\t\t\t\tthis.redLine(this.data[dl + dr + l]);\r\n\t\t\t\tdr--;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.data[dl + dr + l] = [this.data[dl + dr + l][0], R[dr][1]];\r\n\t\t\t\tthis.redLine(this.data[dl + dr + l]);\r\n\t\t\t\tdl--;\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t(async () => {\r\n\t\tawait merge_sort(0, this.data.length - 1);\r\n\t\tthis.end_sort();\r\n\t\t//End Timer\r\n\t\tconst end = new Date().getTime();\r\n\t\tconsole.log(`End: ${end}`);\r\n\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n\t})();\r\n}\r\n//Shell sort\r\nMethod.prototype[\"Shell sort\".toLowerCase()] = function(){\r\n\tthis.set_fill();\r\n\tthis.status = 1;\r\n\t//Start Timer\r\n\tconst start = new Date().getTime();\r\n\tconsole.log(`Start: ${start}`);\r\n\r\n\tlet max = this.data.length;\r\n\tlet gap = ~~(this.data.length / 2);\r\n\tlet i = gap;\r\n\tlet temp_index = gap, temp = 0;\r\n\tlet main = () =>{\r\n\t\tthis.req = requestAnimationFrame(main);\r\n\t\tif(0 <= temp_index - gap && this.data[temp_index][1] < this.data[temp_index - gap][1]){\r\n\t\t\ttemp = this.data[temp_index][1];\r\n\t\t\tthis.data[temp_index][1] = this.data[temp_index - gap][1];\r\n\t\t\tthis.data[temp_index - gap][1] = temp;\r\n\t\t\t// [this.data[temp_index][1], this.data[temp_index - gap][1]] = [this.data[temp_index - gap][1], this.data[temp_index][1]];\r\n\t\t\ttemp_index -= gap;\r\n\t\t\t// changes++;\r\n\t\t\t// if (con) gap = pgap;\r\n\t\t\t// con = 0;\r\n\t\t}\r\n\t\telse{\r\n\t\t\ti++;\r\n\t\t\ttemp_index = i;\r\n\t\t}\r\n\t\tthis.showData();\r\n\t\tthis.redLine(this.data[temp_index - gap * (temp_index >= gap)]);\r\n\t\tif (i >= max) {\r\n\t\t\tgap = ~~(gap / 2);\r\n\t\t\ti = gap;\r\n\t\t\ttemp_index = gap;\r\n\t\t\t// pgap = gap;\r\n\t\t\t// if (con) {gap = 0; i = gap;}\r\n\t\t\t// else {\r\n\t\t\t// \tif(changes){\r\n\t\t\t// \t\tgap = ~~(gap / 2);\r\n\t\t\t// \t\ti = gap;\r\n\t\t\t// \t\ttemp_index = gap;\r\n\t\t\t// \t}\r\n\t\t\t// \telse{\r\n\t\t\t// \t\tgap = 1;\r\n\t\t\t// \t\tcon = 1;\r\n\t\t\t// \t\ti = gap;\r\n\t\t\t// \t\ttemp_index = gap;\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\t\tif (gap < 1) {\r\n\t\t\t\tthis.end_sort();\r\n\t\t\t\t//End Timer\r\n\t\t\t\tconst end = new Date().getTime();\r\n\t\t\t\tconsole.log(`End: ${end}`);\r\n\t\t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.redLine(this.data[i]);\r\n\t}\r\n\tmain();\r\n}\r\n//Cocktail Shaker Sort\r\nMethod.prototype[\"Cocktail sort\".toLowerCase()] = function(){\r\n\tthis.set_fill();\r\n\tthis.status = 1;\r\n\t//Start Timer\r\n\tconst start = new Date().getTime();\r\n\tconsole.log(`Start: ${start}`);\r\n\r\n\tlet i = 0, min = 0, max = this.data.length - 1, inc = 1;\r\n\tlet temp = 0, count = 0;\r\n\tlet main = () => {\r\n\t\tthis.req = requestAnimationFrame(main);\r\n\t\tthis.showData();\r\n\t\tthis.redLine(this.data[i]);\r\n\t\tfor(let n = 0; n < this.speed; n++){\r\n\t\t\tif (min <= i + inc && i + inc <= max) {\r\n\t\t\t\tif ((inc > 0 && this.data[i][1] > this.data[i + inc][1]) || (inc < 0 && this.data[i][1] < this.data[i - 1][1])) {\r\n\t\t\t\t\ttemp = this.data[i][1];\r\n\t\t\t\t\tthis.data[i][1] = this.data[i + inc][1];\r\n\t\t\t\t\tthis.data[i + inc][1] = temp;\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t\ti += inc;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tinc = -inc;\r\n\t\t\t\tif (i >= max){\r\n\t\t\t\t\tmax -= count;\r\n\t\t\t\t\ti = max;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tmin += count;\r\n\t\t\t\t\ti = min;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(min > max){\r\n\t\t\t\tthis.end_sort();\r\n\t\t\t\t//End Timer\r\n\t\t\t\tconst end = new Date().getTime();\r\n\t\t\t\tconsole.log(`End: ${end}`);\r\n\t\t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tmain();\r\n}\r\n\r\n//Quick Sort\r\nMethod.prototype[\"Quick Sort\".toLowerCase()] = function() {\r\n\tthis.set_fill();\r\n\tthis.status = 1;\r\n\t//Start Timer\r\n\tconst start = new Date().getTime();\r\n\tconsole.log(`Start: ${start}`);\r\n\tfunction sleep() {\r\n\t\treturn new Promise(requestAnimationFrame);\r\n\t}\r\n\r\n\tasync function quickSort(l, r){\r\n\t\tif(l < r){\r\n\t\t\tlet pivot_index = await partition_h(l, r);\r\n\t\t\t// if(br) return;\r\n\t\t\tawait quickSort(l, pivot_index);\r\n\t\t\tawait quickSort(pivot_index + 1, r);\r\n\t\t}\r\n\t}\r\n\t//Lomuto Partition\r\n\tlet partition_l = async (l, r) => {\r\n\t\tlet pivot_value = this.data[r][1];\r\n\t\tlet temp = 0, count = 0;\r\n\t\tlet i = l, j = 0;\r\n\r\n\t\tfor(j = l; j < r; j++){\r\n\t\t\tawait sleep();\r\n\t\t\tthis.showData();\r\n\t\t\tthis.redLine(this.data[i]);\r\n\t\t\tthis.redLine(this.data[j]);\r\n\t\t\tif(this.data[j][1] <= pivot_value){\r\n\t\t\t\ttemp = this.data[i][1]; //swap\r\n\t\t\t\tthis.data[i][1] = this.data[j][1];\r\n\t\t\t\tthis.data[j][1] = temp;\r\n\t\t\t\ti++;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp = this.data[i][1]; //swap\r\n\t\tthis.data[i][1] = this.data[r][1];\r\n\t\tthis.data[r][1] = temp;\r\n\t\treturn i;\r\n\t}\r\n\r\n\t//Hoare partition\r\n\tlet partition_h = async (l, r) => {\r\n\t\tlet pivot_value = this.data[l][1];\r\n\t\tlet temp = 0, con_i = 0, con_j = 0;\r\n\t\tlet i = l - 1, j = r + 1;\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tawait sleep();\r\n\t\t\tif(!con_i){\r\n\t\t\t\ti++;\r\n\t\t\t\tif (this.data[i][1] >= pivot_value){\r\n\t\t\t\t\tcon_i = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(con_i){\r\n\t\t\t\tj--;\r\n\t\t\t\tif (this.data[j][1] <= pivot_value){\r\n\t\t\t\t\tcon_j = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.showData();\r\n\t\t\tthis.redLine(this.data[i]);\r\n\t\t\tthis.redLine(this.data[j - 1 * !con_i]);\r\n\t\t\t\r\n\t\t\tif(con_i && con_j){\r\n\t\t\t\tif (i >= j) return j;\r\n\t\t\t\telse {\r\n\t\t\t\t\tcon_i = 0;\r\n\t\t\t\t\tcon_j = 0;\r\n\t\t\t\t\ttemp = this.data[i][1]; //swap\r\n\t\t\t\t\tthis.data[i][1] = this.data[j][1];\r\n\t\t\t\t\tthis.data[j][1] = temp;\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n\t(async ()=>{\r\n\t\tawait quickSort(0, this.data.length - 1);\r\n\t\tthis.end_sort();\r\n\t\t//End Timer\r\n\t\tconst end = new Date().getTime();\r\n\t\tconsole.log(`End: ${end}`);\r\n\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n\t})();\r\n}\r\n\r\n//  ______OLD_______\r\n\r\n//Merge sort algorithm\r\n\t// let queue = [];\r\n\t// (function merge_index(l,r){\r\n\t// \tif(l<r){\r\n\t// \t\tvar m = ~~(l + (r - l) / 2);\r\n\t// \t\tmerge_index(l,m);\r\n\t// \t\tmerge_index(m+1, r);\r\n\t// \t\tqueue.push([l,m,r]);\r\n\t// \t}\r\n\t// })(0, this.data.length - 1);\r\n\t// // console.log(queue);\r\n\t// let q_i = 0\r\n\t// let l = queue[q_i][0];\r\n\t// let m = queue[q_i][1];\r\n\t// let r = queue[q_i][2];\r\n\t// let a1 = this.data.slice(l, m + 1);\r\n\t// let a2 = this.data.slice(m + 1, r + 1);\r\n\t// let l1 = 0, l2 = 0, con = 0;\r\n\t// let main = () =>{\r\n\t// \tthis.req = requestAnimationFrame(main);\r\n\t// \tif (l + l1 > m && m + 1 + l2 > r) {\r\n\t// \t\tq_i++;\r\n\t// \t\tif (q_i >= queue.length) {\r\n\t// \t\t\tthis.end_sort();\r\n\t// \t\t\t//End Timer\r\n\t// \t\t\tconst end = new Date().getTime();\r\n\t// \t\t\tconsole.log(`End: ${end}`);\r\n\t// \t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n\t// \t\t}\r\n\t// \t\telse {\r\n\t// \t\t\tl = queue[q_i][0];\r\n\t// \t\t\tm = queue[q_i][1];\r\n\t// \t\t\tr = queue[q_i][2];\r\n\t// \t\t\ta1 = this.data.slice(l, m + 1);\r\n\t// \t\t\ta2 = this.data.slice(m + 1, r + 1);\r\n\t// \t\t\tl1 = 0;\r\n\t// \t\t\tl2 = 0;\r\n\t// \t\t}\r\n\t// \t}\r\n\t// \telse if ((con = l + l1 > m) || m + 1 + l2 > r){\r\n\t// \t\tthis.data[l + l1 + l2] = [this.data[l + l1 + l2][0], con ? a2[l2][1] : a1[l1][1]];\r\n\t// \t\tthis.showData();\r\n\t// \t\tc.fillStyle = \"#00ffff\";//cyan\r\n\t// \t\tc.fillRect(this.data[m + 1][0], this.c_height - this.data[m + 1][1], this.col_w, this.data[m + 1][1]);\r\n\t// \t\tthis.set_fill();\r\n\t// \t\t//Red line\r\n\t// \t\tthis.redLine(this.data[l + l1 + l2]);\r\n\t// \t\tcon? l2++ : l1++;\r\n\t// \t}\r\n\t// \telse{\r\n\t// \t\tcon = a1[l1][1] > a2[l2][1];\r\n\t// \t\tthis.data[l + l1 + l2] = [this.data[l + l1 + l2][0], con ? a2[l2][1] : a1[l1][1]];\r\n\t// \t\tthis.showData();\r\n\t// \t\tc.fillStyle = \"#00ffff\";//cyan\r\n\t// \t\tc.fillRect(this.data[m + 1][0], this.c_height - this.data[m + 1][1], this.col_w, this.data[m + 1][1]);\r\n\t// \t\tthis.set_fill();\r\n\t// \t\t//Red line\r\n\t// \t\tthis.redLine(this.data[l + l1 + l2]);\r\n\t// \t\tcon ? l2++ : l1++;\r\n\t// \t}\r\n\t// } \r\n\t// main();\r\n","import Method from \"./Methods.js\";\r\n\r\nlet canvas = document.querySelector(\"canvas\");\r\nlet nav_bar = document.querySelector(\".nav-bar\");\r\nlet start_btn = document.querySelector(\".start\");\r\nlet current_opt = document.querySelector(\".selection\");\r\nlet num_ip = document.querySelector(\".ip\");\r\n\r\n// let num = parseInt(num_ip.value);\r\nlet data = [];\r\n\r\nlet method = new Method(parseInt(num_ip.value), data, canvas);\r\nlet default_num = parseInt(num_ip.value);\r\n\r\n//#region Custom Selection\r\nfor (let i of method.description) {\r\n\tlet tag = document.createElement(\"OPTION\");\r\n\tlet text = document.createTextNode(i);\r\n\ttag.appendChild(text)\r\n\ttag.classList.add(\"opts\");\r\n\t// tag.value = i.match(/^(?:\\w){2}/g).join(\"\").trim() + \"sort\";\r\n\ttag.value = i.toLowerCase();\r\n\tcurrent_opt.appendChild(tag);\r\n}\r\n\r\nconst eve = new Event(\"method_changed\")\r\n\r\nlet wrap = document.querySelector(\".option-wrap\");\r\nlet l = current_opt.length;\r\n\r\nlet cur_select = document.createElement(\"DIV\");\r\ncur_select.setAttribute(\"class\", \"current-select\");\r\ncur_select.setAttribute(\"value\", current_opt[0].innerHTML.toLowerCase());\r\ncur_select.innerHTML = current_opt[0].innerHTML;\r\n\r\nlet caret = document.createElement(\"I\");\r\ncaret.setAttribute(\"class\", \"fas fa-caret-down arrow-down\");\r\ncur_select.appendChild(caret);\r\n\r\nwrap.appendChild(cur_select);\r\n\r\nlet select_list = document.createElement(\"DIV\"), select_items = [];\r\nselect_list.setAttribute(\"class\", \"select-items\");\r\nselect_list.classList.toggle(\"hide-items\");\r\nfor (let i = 0; i < l; i++) {\r\n\t// console.log(current_opt[i]);\r\n\tselect_items.push(document.createElement(\"DIV\"));\r\n\tselect_items[i].setAttribute(\"class\", \"choices\");\r\n\tselect_items[i].innerHTML = current_opt[i].innerHTML;\r\n\tselect_items[i].addEventListener(\"click\", () => {\r\n\t\tcur_select.firstChild.data = select_items[i].innerHTML;\r\n\t\tcur_select.setAttribute(\"value\", select_items[i].innerHTML.toLowerCase());\r\n\t\tcur_select.dispatchEvent(eve);\r\n\t});\r\n\tselect_list.appendChild(select_items[i]);\r\n}\r\n\r\nwrap.appendChild(select_list);\r\n\r\nwrap.addEventListener(\"click\", toggleList);\r\n\r\nfunction toggleList() {\r\n\tcur_select.classList.toggle(\"active\");\r\n\tselect_list.classList.toggle(\"hide-items\");\r\n}\r\n\r\n\r\n\r\nwindow.addEventListener(\"click\", (event) => {\r\n\t// console.log(event.target);\r\n\tif (!(wrap.contains(event.target)) && cur_select.classList.contains(\"active\")) {\r\n\t\ttoggleList();\r\n\t}\r\n});\r\n//#endregion\r\n\r\nstart_btn.addEventListener(\"click\", () =>{\r\n\tmethod.status = !method.status;\r\n\t// start_btn.innerHTML = method.status ? \"Stop\" : \"Start\";\r\n\tmethod.status ? (() => { \r\n\t\tstart_btn.firstChild.classList = \"fas fa-pause\";\r\n\t\tstart_btn.lastChild.data = \" STOP\";\r\n\t\tstart_sort();\r\n\t})() : (()=>{\r\n\t\tstop_sort();\r\n\t})();\r\n\t\r\n});\r\nmethod.callBack = function() {\r\n\tstart_btn.firstChild.classList = \"fas fa-play\";\r\n\tstart_btn.lastChild.data = \" START\";\r\n}\r\nwindow.addEventListener(\"resize\", setup);\r\ncur_select.addEventListener(\"method_changed\", change_method, false);\r\nnum_ip.addEventListener(\"change\", () => { \r\n\tstop_sort();\r\n\tmethod.num = parseInt(num_ip.value);\r\n\tif (method.num < +num_ip.min || method.num > +num_ip.max){ \r\n\t\tnum_ip.value = default_num;\r\n\t\tmethod.num = default_num;\r\n\t\talert(\"Invalid number (Too high or too low)\");\r\n\t}\r\n\tsetup();\r\n});\r\n\r\n//#region Setup\r\nfunction setup(){\r\n\tcanvas.width = window.innerWidth;\r\n \tcanvas.height =\twindow.innerHeight - nav_bar.offsetHeight;\r\n \tmethod.c_height = canvas.height;\r\n\tmethod.c_width = canvas.width;\r\n\t\r\n\tmethod.setRandomData();\t\r\n\tmethod.updatePara();\r\n\r\n\tmethod.set_fill();\r\n\tmethod.showData();\r\n}\r\nsetup();\r\n//#endregion\r\n\r\nlet fn = '';\r\nfunction change_method() {\r\n\tmethod.status = 0;\r\n\tmethod.callBack();\r\n\tfn = `method[\"${cur_select.getAttribute(\"value\").toLowerCase()}\"]()`;\r\n}\r\nchange_method();\r\n\r\nfunction start_sort(){\r\n\tif(method.num >= +num_ip.min){\r\n\t\tcancelAnimationFrame(method.req);\r\n\t\tmethod[cur_select.getAttribute(\"value\").toLowerCase()]();\r\n\t}\r\n\t// start_btn.removeEventListener(\"click\", start_sort);\r\n\t// method.Isort();\r\n\t// start_btn.addEventListener(\"click\", start_sort);\r\n}\r\n\r\nfunction stop_sort() {\r\n\tcancelAnimationFrame(method.req);\r\n\tmethod.status = 0;\r\n\tmethod.callBack();\r\n}\r\n"]}