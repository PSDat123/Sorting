{"version":3,"sources":["JS/Methods.js","JS/Sorting.js"],"names":["Method","constructor","num","data","canvas","c","getContext","c_height","height","c_width","width","col_w","status","req","speed","description","Object","keys","prototype","map","s","split","s1","toUpperCase","substr","join","sort","mode","set_fill","style","fillStyle","showData","clearRect","a","i","l","length","fillRect","redLine","color","data_pair","sleep","Promise","requestAnimationFrame","callBack","shuffle","stime","count","j","setRandomData","cur_l","pop","temp","push","Math","random","anim_data","_temp","_stime","start","end","end_sort","toLowerCase","max","t","main","gap","con","pgap","merge_sort","r","m","merge","L","slice","R","il","temp_arr","dl","dr","undefined","temp_index","min","inc","quickSort","pivot_index","partition_h","con_i","con_j","ran","pivot_value","document","querySelector","nav_bar","current_opt","num_ip","start_btn","ran_btn","stop_btn","method","parseInt","value","default_num","tag","createElement","text","createTextNode","appendChild","classList","add","wrap","cur_select","setAttribute","innerHTML","caret","select_list","select_items","toggle","addEventListener","firstChild","toggleList","setup","window","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","start_sort","console","clear","Date","getTime","log","getAttribute","stop_sort","event","contains","target","alert"],"mappings":"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","file":"Sorting.f8fcd0f8.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\r\n\r\nexport default class Method {\r\n  constructor(num, data, canvas) {\r\n    this.c = canvas.getContext(\"2d\");\r\n    this.data = data;\r\n    this.c_height = canvas.height;\r\n    this.c_width = canvas.width;\r\n    this.num = num;\r\n    this.col_w = this.c_width / this.num;\r\n    this.status = 0;\r\n    this.req = 0;\r\n    this.speed = 1;\r\n    this.description = Object.keys(Method.prototype)\r\n      .map((s) =>\r\n        s\r\n          .split(\" \")\r\n          .map((s1) => s1[0].toUpperCase() + s1.substr(1))\r\n          .join(\" \")\r\n      )\r\n      .sort();\r\n    this.mode = \"column\";\r\n  }\r\n  set_fill(style = \"#f0f0f0\") {\r\n    this.c.fillStyle = style;\r\n  }\r\n  showData() {\r\n    this.c.clearRect(0, 0, this.c_width, this.c_height);\r\n    var a = (this.col_w * this.num) / this.c_width;\r\n    for (var i = 0, l = this.data.length; i !== l; i++) {\r\n      this.c.fillRect(\r\n        this.data[i][0] - a,\r\n        this.c_height - this.data[i][1],\r\n        this.col_w + a,\r\n        this.data[i][1]\r\n      );\r\n    }\r\n  }\r\n  redLine(color = \"#ff0505\", ...data_pair) {\r\n    this.set_fill(color);\r\n    let a = this.col_w / (this.c_width / this.num);\r\n    for (let i = 0; i < data_pair.length; i++) {\r\n      this.c.fillRect(\r\n        data_pair[i][0] - a,\r\n        this.c_height - data_pair[i][1],\r\n        this.col_w + a,\r\n        data_pair[i][1]\r\n      );\r\n    }\r\n    this.set_fill();\r\n  }\r\n  async sleep() {\r\n    return new Promise(requestAnimationFrame);\r\n  }\r\n\r\n  callBack() {}\r\n  //#region Animated Shuffle\r\n  async shuffle() {\r\n    this.set_fill();\r\n    let stime = 12,\r\n      count = 0;\r\n    for (let i = 0; i < stime * stime; i++) {\r\n      await this.sleep();\r\n      count = 0;\r\n      for (let j = 0; j < this.data.length; j++) {\r\n        if (!this.data[j][1]) count++;\r\n        else this.data[j][1] = ~~(this.data[j][1] * ((stime - 1) / stime));\r\n      }\r\n      this.showData();\r\n      if (count === this.data.length) break;\r\n    }\r\n    this.data = [];\r\n    await this.setRandomData();\r\n  }\r\n  async setRandomData() {\r\n    this.set_fill();\r\n    this.col_w = this.c_width / this.num;\r\n    let cur_l = this.data.length,\r\n      min_h = 15,\r\n      num = this.num;\r\n    if (num < cur_l) {\r\n      for (let i = 0; i < -this.num + cur_l; i++) {\r\n        this.data.pop();\r\n      }\r\n      return;\r\n    }\r\n    let temp = [];\r\n    // for (let i = 0; i < this.num - cur_l * (this.num >= cur_l); i++) {\r\n    for (let i = 0; i < num - cur_l; i++) {\r\n      temp.push([\r\n        cur_l + i,\r\n        ~~(this.c_height - Math.random() * (this.c_height - min_h)),\r\n        //cos//~~(this.c_height - (Math.cos(this.data.length / 10) + 1) * (this.c_height/2 - min_h/2))\r\n        //sin//~~(this.c_height - (Math.sin(this.data.length / 10) + 1) * (this.c_height/2 - min_h/2))\r\n      ]);\r\n      this.data.push([i * this.col_w, 0]);\r\n      //cos//~~(this.c_height - (Math.cos(this.data.length / 10) + 1) * this.c_height/2 ));\r\n      //sin//~~(this.c_height - (Math.sin(this.data.length / 10) + 1) * this.c_height / 2));\r\n    }\r\n    this.anim_data(temp, min_h, cur_l, num);\r\n  }\r\n  async anim_data(_temp, _stime, start, end) {\r\n    let stime = _stime,\r\n      count = 0,\r\n      temp = _temp;\r\n    for (let i = 0; i < stime * stime; i++) {\r\n      await this.sleep();\r\n      count = 0;\r\n      this.showData();\r\n      for (let j = 0; j < end - start; j++) {\r\n        if (this.data[start + j][1] >= temp[j][1]) {\r\n          count++;\r\n          this.data[start + j][1] = temp[j][1];\r\n        } else\r\n          this.data[start + j][1] = ~~(\r\n            this.data[start + j][1] +\r\n            temp[j][1] / stime\r\n          );\r\n      }\r\n      if (count === end - start) break;\r\n    }\r\n  }\r\n  //#endregion\r\n  end_sort() {\r\n    this.c.fillStyle = \"#00ff00\";\r\n    this.showData();\r\n    this.status = 0;\r\n    this.callBack();\r\n  }\r\n}\r\n\r\n//#region Bubble Sort\r\nMethod.prototype[\"Bubble sort\".toLowerCase()] = async function() {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let count = 0,\r\n    i = 0,\r\n    max = this.num,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for (;;) {\r\n      if (!this.status) return 0;\r\n      await this.sleep();\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n\r\n      if (i + 1 < max && this.data[i][1] > this.data[i + 1][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i + 1][1];\r\n        this.data[i + 1][1] = temp;\r\n        // [this.data[i][1], this.data[i+1][1]] = [this.data[i+1][1], this.data[i][1]];\r\n        count = 0;\r\n      } else {\r\n        count++;\r\n      }\r\n      if (count >= max) {\r\n        return 1;\r\n      }\r\n      i++;\r\n      if (i >= max) {\r\n        max -= count;\r\n        count = 0;\r\n        i = 0;\r\n      }\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if(!t) return;\r\n  this.end_sort()\r\n};\r\n//#endregion\r\n\r\n//#region Comb Sort\r\nMethod.prototype[\"Comb sort\".toLowerCase()] = async function(){\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let max = this.data.length - 1,\r\n    gap = ~~((this.data.length * 10) / 13), \r\n    i = 0,\r\n    temp = 0,\r\n    count = 0,\r\n    con = 0,\r\n    pgap = gap;\r\n\r\n  let main = async () => {\r\n    for (;;) {\r\n      if (!this.status) return 0;\r\n      await this.sleep()\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n      if (i + gap <= max && this.data[i][1] > this.data[i + gap][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i + gap][1];\r\n        this.data[i + gap][1] = temp;\r\n        // [this.data[i][1], this.data[i+1][1]] = [this.data[i+1][1], this.data[i][1]];\r\n        if (con) gap = pgap;\r\n        con = 0;\r\n        count = 0;\r\n      } else {\r\n        count++;\r\n      }\r\n      this.redLine(\"#ff0505\", this.data[i + gap]);\r\n      i++;\r\n      if (i + gap > max) {\r\n        i = 0;\r\n        pgap = gap;\r\n        gap = ~~((gap * 10) / 13);\r\n        if (gap < 1 && count >= max) {\r\n          return 1;\r\n        } else if (gap < 1 || count >= max - pgap) {\r\n          con = 1;\r\n          gap = 1;\r\n        }\r\n        count = 0;\r\n      }\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if (!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Insertion Sort\r\nMethod.prototype[\"Insertion sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let max = 1,\r\n    i = max + 1,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for(;;){\r\n      if (!this.status) return 0;\r\n      await this.sleep();\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i - 1]);\r\n      i--;\r\n      if (i - 1 >= 0 && this.data[i][1] < this.data[i - 1][1]) {\r\n        temp = this.data[i][1];\r\n        this.data[i][1] = this.data[i - 1][1];\r\n        this.data[i - 1][1] = temp;\r\n        // [this.data[i][1], this.data[i-1][1]] = [this.data[i-1][1], this.data[i][1]];\r\n      } else {\r\n        max++;\r\n        i = max + 1;\r\n        // count = 0;\r\n      }\r\n      if (max >= this.num) {      \r\n        return 1;\r\n      }\r\n    }\r\n  };\r\n  let t = await main();\r\n  this.showData();\r\n  if(!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Merge Sort\r\nMethod.prototype[\"Merge sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let merge_sort = async (l, r) => {\r\n    if (l < r) {\r\n      var m = ~~(l + (r - l) / 2);\r\n      await merge_sort(l, m);\r\n      await merge_sort(m + 1, r);\r\n\r\n      await merge(l, m, r);\r\n    }\r\n    if (!this.status) return -1;\r\n  }\r\n\r\n  let merge = async (l, m, r) => {\r\n    let L = this.data.slice(l, m + 1);\r\n    let R = this.data.slice(m + 1, r + 1);\r\n    let il = L.length + R.length;\r\n    let temp_arr = [];\r\n    for (let dl = 0, dr = 0; dl + dr < il; dl++, dr++) {\r\n      if (!this.status) return -1;\r\n      await this.sleep();\r\n      this.showData();\r\n      if (R[dr]?.[1] === undefined || L[dl]?.[1] < R[dr]?.[1]) {\r\n        temp_arr.push(L[dl][1]);\r\n        this.redLine(\"#ff0505\", this.data[dl + l], this.data[m + dr]);\r\n        dr--;\r\n      } else {\r\n        temp_arr.push(R[dr][1]);\r\n        // this.data[dl + dr + l] = [this.data[dl + dr + l][0], R[dr][1]];\r\n        this.redLine(\"#ff0505\", this.data[dl + l], this.data[m + dr]);\r\n        dl--;\r\n      }\r\n      \r\n    }\r\n    for (let i = 0; i < temp_arr.length; i++) {\r\n      if (!this.status) return -1;\r\n      \r\n      this.data[l + i][1] = temp_arr[i];\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[l + i]);\r\n      await this.sleep();\r\n    }\r\n  };\r\n  let t = await merge_sort(0, this.data.length - 1) || 1;\r\n  this.showData();\r\n  if(t === -1) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Shell Sort\r\nMethod.prototype[\"Shell sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1; \r\n  let max = this.data.length,\r\n    gap = ~~(this.data.length / 2),\r\n    i = gap,\r\n    temp_index = gap,\r\n    temp = 0;\r\n  let main = async () => {\r\n    for (;;) {\r\n      if (!this.status) return 0;\r\n      await this.sleep();\r\n      if (\r\n        temp_index - gap >= 0 &&\r\n        this.data[temp_index][1] < this.data[temp_index - gap][1]\r\n      ) {\r\n        temp = this.data[temp_index][1];\r\n        this.data[temp_index][1] = this.data[temp_index - gap][1];\r\n        this.data[temp_index - gap][1] = temp;\r\n        // [this.data[temp_index][1], this.data[temp_index - gap][1]] = [this.data[temp_index - gap][1], this.data[temp_index][1]];\r\n        temp_index -= gap;\r\n        // changes++;\r\n        // if (con) gap = pgap;\r\n        // con = 0;\r\n      } else {\r\n        i++;\r\n        temp_index = i;\r\n      }\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[temp_index - gap * (temp_index >= gap)]);\r\n      if (i >= max) {\r\n        gap = ~~(gap / 2);\r\n        i = gap;\r\n        temp_index = gap;\r\n        // pgap = gap;\r\n        // if (con) {gap = 0; i = gap;}\r\n        // else {\r\n        // \tif(changes){\r\n        // \t\tgap = ~~(gap / 2);\r\n        // \t\ti = gap;\r\n        // \t\ttemp_index = gap;\r\n        // \t}\r\n        // \telse{\r\n        // \t\tgap = 1;\r\n        // \t\tcon = 1;\r\n        // \t\ti = gap;\r\n        // \t\ttemp_index = gap;\r\n        // \t}\r\n        // }\r\n        if (gap < 1) {\r\n          return 1;\r\n        }\r\n      }\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n    }\r\n  }\r\n  let t = await main();\r\n  this.showData();\r\n  if(!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Cocktail Shaker Sort\r\nMethod.prototype[\"Cocktail sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let i = 0,\r\n    min = 0,\r\n    max = this.data.length - 1,\r\n    inc = 1,\r\n    temp = 0,\r\n    count = 0;\r\n  let main = async () => {\r\n    for(;;){\r\n      if (!this.status) return 0;\r\n      await this.sleep();\r\n      this.showData();\r\n      this.redLine(\"#ff0505\", this.data[i]);\r\n\r\n      if (min <= i + inc && i + inc <= max) {\r\n        if (\r\n          (inc > 0 && this.data[i][1] > this.data[i + inc][1]) ||\r\n          (inc < 0 && this.data[i][1] < this.data[i - 1][1])\r\n        ) {\r\n          temp = this.data[i][1];\r\n          this.data[i][1] = this.data[i + inc][1];\r\n          this.data[i + inc][1] = temp;\r\n          count = 0;\r\n        } else {\r\n          count++;\r\n        }\r\n        i += inc;\r\n      } else {\r\n        inc = -inc;\r\n        if (i >= max) {\r\n          max -= count;\r\n          i = max;\r\n        } else {\r\n          min += count;\r\n          i = min;\r\n        }\r\n      }\r\n      if (min > max) {\r\n        return 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  let t = await main();\r\n  this.showData();\r\n  if(!t) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region Quick Sort\r\nMethod.prototype[\"Quick Sort\".toLowerCase()] = async function () {\r\n  this.set_fill();\r\n  this.status = 1;\r\n\r\n  let temp = 0;\r\n\r\n  let quickSort = async (l, r) => {\r\n    if (l < r) {\r\n      let pivot_index = await partition_h(l, r);\r\n      if (pivot_index === -1) return pivot_index;\r\n      await quickSort(l, pivot_index);\r\n      await quickSort(pivot_index + 1, r);\r\n    }\r\n    if (!this.status) return -1;\r\n  };\r\n  //Lomuto Partition\r\n  // let partition_l = async (l, r) => {\r\n  // \tlet pivot_value = this.data[r][1];\r\n  // \tlet temp = 0;\r\n  // \tlet i = l, j = 0;\r\n\r\n  // \tfor(j = l; j < r; j++){\r\n  // \t\tawait this.sleep();\r\n  // \t\tthis.showData();\r\n  // \t\tthis.redLine(\"#ff0505\", this.data[i]);\r\n  // \t\tthis.redLine(\"#ff0505\", this.data[j]);\r\n  // \t\tif(this.data[j][1] <= pivot_value){\r\n  // \t\t\ttemp = this.data[i][1]; //swap\r\n  // \t\t\tthis.data[i][1] = this.data[j][1];\r\n  // \t\t\tthis.data[j][1] = temp;\r\n  // \t\t\ti++;\r\n  // \t\t}\r\n  // \t}\r\n  // \ttemp = this.data[i][1]; //swap\r\n  // \tthis.data[i][1] = this.data[r][1];\r\n  // \tthis.data[r][1] = temp;\r\n  // \treturn i;\r\n  // }\r\n\r\n  //Hoare partition\r\n  let partition_h = async (l, r) => {\r\n    let con_i = 0,\r\n      con_j = 0;\r\n    //#region --Random pivot--\r\n    var ran = ~~((r + l) / 2);\r\n    // temp = this.data[ran][1]; //swap\r\n    // this.data[ran][1] = this.data[l][1];\r\n    // this.data[l][1] = temp;\r\n\r\n    \r\n    //#endregion\r\n    let pivot_value = this.data[ran][1];\r\n    let i = l - 1,\r\n      j = r + 1;\r\n\r\n    for (;;) {\r\n      if (!this.status) return -1;\r\n      await this.sleep();\r\n      if (!con_i) {\r\n        i++;\r\n        if (this.data[i][1] >= pivot_value) {\r\n          con_i = 1;\r\n        }\r\n      }\r\n      if (con_i) {\r\n        j--;\r\n        if (this.data[j][1] <= pivot_value) {\r\n          con_j = 1;\r\n        }\r\n      }\r\n      this.showData();\r\n      this.redLine(\"#68f571\", this.data[ran]);\r\n      this.redLine(\"#ff0505\", this.data[i], this.data[j - 1 * !con_i]);\r\n      if (con_i && con_j) {\r\n        if (i >= j) return j;\r\n        else {\r\n          con_i = 0;\r\n          con_j = 0;\r\n          if(i === ran) ran = j;\r\n          else if(j === ran) ran = i;\r\n          temp = this.data[i][1]; //swap\r\n          this.data[i][1] = this.data[j][1];\r\n          this.data[j][1] = temp;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  let t = (await quickSort(0, this.data.length - 1)) || 1;\r\n  this.showData();\r\n  if (t === -1) return;\r\n  this.end_sort();\r\n};\r\n//#endregion\r\n\r\n//#region ______OLD_____\r\n\r\n//Merge sort algorithm\r\n// let queue = [];\r\n// (function merge_index(l,r){\r\n// \tif(l<r){\r\n// \t\tvar m = ~~(l + (r - l) / 2);\r\n// \t\tmerge_index(l,m);\r\n// \t\tmerge_index(m+1, r);\r\n// \t\tqueue.push([l,m,r]);\r\n// \t}\r\n// })(0, this.data.length - 1);\r\n// // console.log(queue);\r\n// let q_i = 0\r\n// let l = queue[q_i][0];\r\n// let m = queue[q_i][1];\r\n// let r = queue[q_i][2];\r\n// let a1 = this.data.slice(l, m + 1);\r\n// let a2 = this.data.slice(m + 1, r + 1);\r\n// let l1 = 0, l2 = 0, con = 0;\r\n// let main = () =>{\r\n// \tthis.req = requestAnimationFrame(main);\r\n// \tif (l + l1 > m && m + 1 + l2 > r) {\r\n// \t\tq_i++;\r\n// \t\tif (q_i >= queue.length) {\r\n// \t\t\tthis.end_sort();\r\n// \t\t\t//End Timer\r\n// \t\t\tconst end = new Date().getTime();\r\n// \t\t\tconsole.log(`End: ${end}`);\r\n// \t\t\tconsole.log(`Time taken: ${end - start}ms`); //Time taken\r\n// \t\t}\r\n// \t\telse {\r\n// \t\t\tl = queue[q_i][0];\r\n// \t\t\tm = queue[q_i][1];\r\n// \t\t\tr = queue[q_i][2];\r\n// \t\t\ta1 = this.data.slice(l, m + 1);\r\n// \t\t\ta2 = this.data.slice(m + 1, r + 1);\r\n// \t\t\tl1 = 0;\r\n// \t\t\tl2 = 0;\r\n// \t\t}\r\n// \t}\r\n// \telse if ((con = l + l1 > m) || m + 1 + l2 > r){\r\n// \t\tthis.data[l + l1 + l2] = [this.data[l + l1 + l2][0], con ? a2[l2][1] : a1[l1][1]];\r\n// \t\tthis.showData();\r\n// \t\tc.fillStyle = \"#00ffff\";//cyan\r\n// \t\tc.fillRect(this.data[m + 1][0], this.c_height - this.data[m + 1][1], this.col_w, this.data[m + 1][1]);\r\n// \t\tthis.set_fill();\r\n// \t\t//Red line\r\n// \t\tthis.redLine(this.data[l + l1 + l2]);\r\n// \t\tcon? l2++ : l1++;\r\n// \t}\r\n// \telse{\r\n// \t\tcon = a1[l1][1] > a2[l2][1];\r\n// \t\tthis.data[l + l1 + l2] = [this.data[l + l1 + l2][0], con ? a2[l2][1] : a1[l1][1]];\r\n// \t\tthis.showData();\r\n// \t\tc.fillStyle = \"#00ffff\";//cyan\r\n// \t\tc.fillRect(this.data[m + 1][0], this.c_height - this.data[m + 1][1], this.col_w, this.data[m + 1][1]);\r\n// \t\tthis.set_fill();\r\n// \t\t//Red line\r\n// \t\tthis.redLine(this.data[l + l1 + l2]);\r\n// \t\tcon ? l2++ : l1++;\r\n// \t\t}\r\n// }\r\n// main();\r\n//#endregion\r\n","import Method from \"./Methods.js\";\r\n\r\nlet canvas = document.querySelector(\"canvas\");\r\nlet nav_bar = document.querySelector(\".nav-bar\");\r\n\r\nlet current_opt = document.querySelector(\".selection\");\r\nlet num_ip = document.querySelector(\".ip\");\r\n\r\nlet start_btn = document.querySelector(\".start\");\r\nlet ran_btn = document.querySelector(\".randomizer\");\r\nlet stop_btn = document.querySelector(\".stop\");\r\n\r\n// let num = parseInt(num_ip.value);\r\nlet data = [];\r\n\r\nlet method = new Method(parseInt(num_ip.value), data, canvas);\r\nlet default_num = parseInt(num_ip.value);\r\n\r\n//#region Custom Selection\r\nfor (let i of method.description) {\r\n  let tag = document.createElement(\"OPTION\");\r\n  let text = document.createTextNode(i);\r\n  tag.appendChild(text);\r\n  tag.classList.add(\"opts\");\r\n  // tag.value = i.match(/^(?:\\w){2}/g).join(\"\").trim() + \"sort\";\r\n  tag.value = i.toLowerCase();\r\n  current_opt.appendChild(tag);\r\n}\r\n\r\n// const eve = new Event(\"method_changed\")\r\n\r\nlet wrap = document.querySelector(\".option-wrap\");\r\nlet l = current_opt.length;\r\n\r\nlet cur_select = document.createElement(\"DIV\");\r\ncur_select.setAttribute(\"class\", \"current-select\");\r\ncur_select.setAttribute(\"value\", current_opt[0].innerHTML.toLowerCase());\r\ncur_select.innerHTML = current_opt[0].innerHTML;\r\n\r\nlet caret = document.createElement(\"I\");\r\ncaret.setAttribute(\"class\", \"fas fa-caret-down arrow-down\");\r\ncur_select.appendChild(caret);\r\n\r\nwrap.appendChild(cur_select);\r\n\r\nlet select_list = document.createElement(\"DIV\"),\r\n  select_items = [];\r\nselect_list.setAttribute(\"class\", \"select-items\");\r\nselect_list.classList.toggle(\"hide-items\");\r\nfor (let i = 0; i < l; i++) {\r\n  // console.log(current_opt[i]);\r\n  select_items.push(document.createElement(\"DIV\"));\r\n  select_items[i].setAttribute(\"class\", \"choices\");\r\n  select_items[i].innerHTML = current_opt[i].innerHTML;\r\n  select_items[i].addEventListener(\"click\", () => {\r\n    cur_select.firstChild.data = select_items[i].innerHTML;\r\n    cur_select.setAttribute(\"value\", select_items[i].innerHTML.toLowerCase());\r\n    // cur_select.dispatchEvent(eve);\r\n    method.status = 0;\r\n    method.callBack();\r\n  });\r\n  select_list.appendChild(select_items[i]);\r\n}\r\n\r\nwrap.appendChild(select_list);\r\n\r\nwrap.addEventListener(\"click\", toggleList);\r\n\r\nfunction toggleList() {\r\n  cur_select.classList.toggle(\"active\");\r\n  select_list.classList.toggle(\"hide-items\");\r\n}\r\n\r\nwindow.addEventListener(\"click\", (event) => {\r\n  // console.log(event.target);\r\n  if (!wrap.contains(event.target) && cur_select.classList.contains(\"active\")) {\r\n    toggleList();\r\n  }\r\n});\r\n//#endregion\r\n\r\n//#region Events\r\nmethod.callBack = function () {\r\n  start_btn.firstChild.classList = \"fas fa-play\";\r\n};\r\nstart_btn.addEventListener(\"click\", () => {\r\n  method.status = !method.status;\r\n  // start_btn.innerHTML = method.status ? \"Stop\" : \"Start\";\r\n  method.status\r\n    ? (() => {\r\n        start_btn.firstChild.classList = \"fas fa-pause\";\r\n        start_sort();\r\n      })()\r\n    : (() => {\r\n        stop_sort();\r\n      })();\r\n});\r\n\r\nwindow.addEventListener(\"resize\", setup);\r\n// cur_select.addEventListener(\"method_changed\", change_method, false);\r\nnum_ip.addEventListener(\"change\", () => {\r\n  stop_sort();\r\n  method.num = parseInt(num_ip.value);\r\n  if (method.num < +num_ip.min || method.num > +num_ip.max) {\r\n    num_ip.value = default_num;\r\n    method.num = default_num;\r\n    alert(\"Invalid number (Too high or too low)\");\r\n  }\r\n  setup();\r\n});\r\nran_btn.addEventListener(\"click\", async () =>{ \r\n  stop_sort();\r\n  method.shuffle();\r\n});\r\nstop_btn.addEventListener(\"click\", stop_sort);\r\n//#endregion\r\n\r\n//#region Setup\r\nfunction setup() {\r\n  canvas.width =\r\n    window.innerWidth ||\r\n    document.documentElement.clientWidth ||\r\n    document.body.clientWidth;\r\n  canvas.height =\r\n    window.innerHeight - nav_bar.clientHeight ||\r\n    document.documentElement.clientHeight - nav_bar.clientHeight ||\r\n    document.body.clientHeight - nav_bar.clientHeight;\r\n  method.c_height = canvas.height;\r\n  method.c_width = canvas.width;\r\n\r\n  method.setRandomData();\r\n  for (var i = 0, l = method.data.length; i !== l; i++) {\r\n    method.col_w = method.c_width / method.num;\r\n    method.data[i][0] = i * method.col_w;\r\n  }\r\n\r\n  method.set_fill();\r\n  method.showData();\r\n}\r\nsetup();\r\n//#endregion\r\n\r\n// // let fn = '';\r\n// function change_method() {\r\n// \tmethod.status = 0;\r\n// \tmethod.callBack();\r\n// \t// fn = `method[\"${cur_select.getAttribute(\"value\").toLowerCase()}\"]()`;\r\n// }\r\n// change_method();\r\n\r\nasync function start_sort() {\r\n  if (method.num >= +num_ip.min){\r\n    console.clear();\r\n    //Start Timer\r\n    const start = new Date().getTime();\r\n    console.log(`Start: ${start}`);\r\n\r\n    await method[cur_select.getAttribute(\"value\").toLowerCase()]?.();\r\n\r\n    //End Timer\r\n    const end = new Date().getTime();\r\n    console.log(`End: ${end}`);\r\n    console.log(`Time taken: ${end - start}ms`); //Time taken\r\n  }\r\n  // start_btn.removeEventListener(\"click\", start_sort);\r\n  // method.Isort();\r\n  // start_btn.addEventListener(\"click\", start_sort);\r\n}\r\n\r\nfunction stop_sort() {\r\n  method.status = 0;\r\n  method.callBack();\r\n}\r\n"]}